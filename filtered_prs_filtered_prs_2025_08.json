[
  {
    "number": 283,
    "title": "Migrate Commons Lang from 2 to 3 and StringEscapeUtils to Commons Text",
    "state": "MERGED",
    "createdAt": "2025-08-18T14:02:54Z",
    "updatedAt": "2025-08-20T13:46:14Z",
    "user": "gounthar",
    "repository": "jenkinsci/android-emulator-plugin",
    "pluginName": "android-emulator",
    "labels": [
      "dependencies"
    ],
    "url": "https://github.com/jenkinsci/android-emulator-plugin/pull/283",
    "description": "Hello android-emulator developers! ðŸ‘‹\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Migrate Commons Lang from 2 to 3 and StringEscapeUtils to Commons Text\n    io.jenkins.tools.pluginmodernizer.MigrateCommonsLang2ToLang3AndCommonText\n    Migrate Commons Lang from 2 to 3 and StringEscapeUtils to Commons Text.\n\nThis pull request upgrades Apache Commons Lang 2 to Apache Commons Lang 3 and migrates HTML escaping functionality from Apache Commons Lang to Apache Commons Text, as\nApache Commons community recommends using Apache Commons Text for string escaping operations, as it provides a more focused and feature-rich API for text processing.\nWhat's Changed?\n\nMigrate from deprecated/EOL Apache Commons Lang 2 to Commons Lang 3.\nMigrate from deprecated/EOL Apache Commons Lang StringEscapeUtils to Commons Text.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 13,
    "title": "Migrate Commons Lang from 2 to 3 and StringEscapeUtils to Commons Text",
    "state": "OPEN",
    "createdAt": "2025-08-18T13:24:58Z",
    "updatedAt": "2025-08-18T13:42:16Z",
    "user": "gounthar",
    "repository": "jenkinsci/probely-security-plugin",
    "pluginName": "probely-security",
    "labels": null,
    "url": "https://github.com/jenkinsci/probely-security-plugin/pull/13",
    "description": "Hello probely-security developers! ðŸ‘‹\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Migrate Commons Lang from 2 to 3 and StringEscapeUtils to Commons Text\n    io.jenkins.tools.pluginmodernizer.MigrateCommonsLang2ToLang3AndCommonText\n    Migrate Commons Lang from 2 to 3 and StringEscapeUtils to Commons Text.\n\nThis pull request upgrades Apache Commons Lang 2 to Apache Commons Lang 3 and migrates HTML escaping functionality from Apache Commons Lang to Apache Commons Text.\nThe Apache Commons community recommends using Apache Commons Text for string escaping operations, as it offers a more focused and feature-rich API for text processing.\nWhat's Changed?\n\nMigrated from deprecated/EOL Apache Commons Lang 2 to Commons Lang 3.\nTransitioned from deprecated/EOL StringEscapeUtils in Apache Commons Lang to Commons Text.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 12,
    "title": "chore(github): Add CODEOWNERS",
    "state": "OPEN",
    "createdAt": "2025-08-18T13:17:19Z",
    "updatedAt": "2025-08-18T13:17:19Z",
    "user": "gounthar",
    "repository": "jenkinsci/probely-security-plugin",
    "pluginName": "probely-security",
    "labels": null,
    "url": "https://github.com/jenkinsci/probely-security-plugin/pull/12",
    "description": "Hello probely-security developers! ðŸ‘‹\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Add CODEOWNERS file\n    io.jenkins.tools.pluginmodernizer.AddCodeOwner\n    Adds a CODEOWNERS file to a Jenkins plugin.\n\nWhy is this important?\nTo improve GitHub integration and enhance the plugin health score.\nTesting Done\nNone. We rely on GitHub checks of the pull request.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 11,
    "title": "chore(dependencies): Automate dependency updates with Dependabot",
    "state": "OPEN",
    "createdAt": "2025-08-18T13:12:42Z",
    "updatedAt": "2025-08-18T13:12:42Z",
    "user": "gounthar",
    "repository": "jenkinsci/probely-security-plugin",
    "pluginName": "probely-security",
    "labels": null,
    "url": "https://github.com/jenkinsci/probely-security-plugin/pull/11",
    "description": "Hello probely-security developers! ðŸ‘‹\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Setup dependabot\n    io.jenkins.tools.pluginmodernizer.SetupDependabot\n    Setup dependabot for the Jenkins plugin if it doesn't exist.\n\nWhy Automate with Dependabot?\nManaging dependencies can be a time-consuming and challenging task, especially when maintaining a Jenkins plugin.\nBy automating this process with Dependabot, you gain numerous advantages:\n\n\nKeep Pace with Innovation: Dependabot ensures\nyour plugin remains cutting-edge by promptly incorporating the latest features and enhancements from upstream libraries.\n\n\nStrengthen Security: Staying up-to-date with dependency updates is crucial for security.\nDependabot automatically flags and updates any vulnerable dependencies,\nhelping to protect your plugin from potential exploits.\n\n\nSave Time and Effort: Spend less time managing dependencies and more time innovating.\nDependabot automatically submits pull requests for new releases,\nallowing you to effortlessly review and integrate updates.\n\n\nEnhance Compatibility and Stability: Regular updates improve both performance and compatibility with other plugins and the Jenkins core,\nensuring a seamless experience for your users.\n\n\nImprove GitHub Integration: Dependabot streamlines and enhances the integration process with GitHub,\nmaking it easier to manage updates.\n\n\nEnhance the plugin health score: Regular updates contribute to a better health score by ensuring your plugin is reliable and up-to-date.\n\n\nFocus on What Matters: With Dependabot, you can concentrate on developing new features and fixing bugs, knowing that it handles dependency updates efficiently.\n\n\nSetting up Dependabot exemplifies a proactive approach to modern software maintenance, aligning your plugin with best practices in the industry. We invite you to test these updates and adopt a maintenance workflow that is both efficient and secure.\nYour insights and feedback are invaluable to us, and we are here to support you through this transition as needed.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 10,
    "title": "Migrate plugins to Java 25 LTS",
    "state": "OPEN",
    "createdAt": "2025-08-18T13:10:21Z",
    "updatedAt": "2025-08-18T13:10:21Z",
    "user": "gounthar",
    "repository": "jenkinsci/probely-security-plugin",
    "pluginName": "probely-security",
    "labels": null,
    "url": "https://github.com/jenkinsci/probely-security-plugin/pull/10",
    "description": "Hello probely-security developers! ðŸ‘‹\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Migrate plugins to Java 25\n    io.jenkins.tools.pluginmodernizer.MigrateToJava25\n    Migrate plugins to Java 25 LTS.\n\nWhat's Changed?\nWe have introduced changes to improve the plugin's compatibility with Java 25 and align it with modern Jenkins development standards\n\nReplaced deprecated API calls with their current equivalents where a clear migration path exists.\nUpgrade build files to use Java 25 as the target/source.\nUpgrade plugins to versions that are compatible with Java 25.\nAdd Java 25 configuration in Jenkinsfile for testing on ci.jenkins.io.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 282,
    "title": "Migrate plugins to Java 25 LTS",
    "state": "MERGED",
    "createdAt": "2025-08-17T15:43:33Z",
    "updatedAt": "2025-08-18T13:10:15Z",
    "user": "gounthar",
    "repository": "jenkinsci/android-emulator-plugin",
    "pluginName": "android-emulator",
    "labels": [
      "dependencies"
    ],
    "url": "https://github.com/jenkinsci/android-emulator-plugin/pull/282",
    "description": "Hello android-emulator developers! ðŸ‘‹\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Migrate plugins to Java 25\n    io.jenkins.tools.pluginmodernizer.MigrateToJava25\n    Migrate plugins to Java 25 LTS.\n\nWhat's Changed?\nWe have introduced changes to improve the plugin's compatibility with Java 25 and align it with modern Jenkins development standards\n\nReplaced deprecated API calls with their current equivalents where a clear migration path exists.\nUpgrade build files to use Java 25 as the target/source.\nUpgrade plugins to versions that are compatible with Java 25.\nAdd Java 25 configuration in Jenkinsfile for testing on ci.jenkins.io.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 275,
    "title": "Migrate plugins to Java 25 LTS",
    "state": "MERGED",
    "createdAt": "2025-08-15T11:29:57Z",
    "updatedAt": "2025-08-15T19:40:55Z",
    "user": "CodexRaunak",
    "repository": "jenkinsci/skip-notifications-trait-plugin",
    "pluginName": "skip-notifications-trait",
    "labels": null,
    "url": "https://github.com/jenkinsci/skip-notifications-trait-plugin/pull/275",
    "description": "Hello skip-notifications-trait developers! ðŸ‘‹\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Migrate plugins to Java 25\n    io.jenkins.tools.pluginmodernizer.MigrateToJava25\n    Migrate plugins to Java 25 LTS.\n\nWhat's Changed?\nWe have introduced changes to improve the plugin's compatibility with Java 25 and align it with modern Jenkins development standards\n\nReplaced deprecated API calls with their current equivalents where a clear migration path exists.\nUpgrade build files to use Java 25 as the target/source.\nUpgrade plugins to versions that are compatible with Java 25.\nAdd Java 25 configuration in Jenkinsfile for testing on ci.jenkins.io.",
    "checkStatus": "SUCCESS"
  }
]
