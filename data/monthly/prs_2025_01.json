[
  {
    "number": 141,
    "title": "Require 2.346.3",
    "state": "CLOSED",
    "createdAt": "2025-01-30T10:15:29Z",
    "updatedAt": "2025-03-03T17:05:14Z",
    "user": "gounthar",
    "repository": "jenkinsci/vsphere-cloud-plugin",
    "pluginName": "vsphere-cloud",
    "labels": null,
    "url": "https://github.com/jenkinsci/vsphere-cloud-plugin/pull/141",
    "description": "Hello vsphere-cloud developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 150,
    "title": "feat: upgrade to Jenkins LTS Core 2.462.3 for Java 11 support",
    "state": "MERGED",
    "createdAt": "2025-01-30T09:23:27Z",
    "updatedAt": "2025-01-30T12:09:43Z",
    "user": "gounthar",
    "repository": "jenkinsci/log-parser-plugin",
    "pluginName": "log-parser",
    "labels": null,
    "url": "https://github.com/jenkinsci/log-parser-plugin/pull/150",
    "description": "Hello log-parser developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 11\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava11CoreVersion\n    Upgrade to latest LTS core version supporting Java 11.\n\nWhy is this important?\nTransitional Step to Java 17\nUpgrading to Jenkins LTS Core 2.462.3 is a critical step in our roadmap towards leveraging Java 17. This transition serves as an intermediary phase, ensuring that all systems are optimized for Java 11 before making the leap to Java 17.\nEnhancements and Security\nBy moving to this LTS version, we benefit from the latest performance and security improvements foundational to Java 11. Ensuring our dependencies are up-to-date and secure prepares the groundwork for a smoother transition to Java 17.\nLong-Term Support\nThe LTS version provides the necessary support and stability for Java 11, offering assurance during our gradual migration process. This allows us to take advantage of long-term updates and critical patches.\nEmbracing these incremental changes aligns our development environment with current standards and strategically positions us for future advancement. We appreciate your feedback and testing as we aim for a seamless adjustment period.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 12,
    "title": "chore(pom): Use recommended core version 2.462.3, and Java 11.",
    "state": "MERGED",
    "createdAt": "2025-01-30T09:14:58Z",
    "updatedAt": "2025-02-14T16:57:25Z",
    "user": "gounthar",
    "repository": "jenkinsci/results-cache-plugin",
    "pluginName": "results-cache",
    "labels": null,
    "url": "https://github.com/jenkinsci/results-cache-plugin/pull/12",
    "description": "Hello results-cache developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version\n    io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version.\n\nWhy is this important?\nJenkins plugins declare a minimum supported Jenkins version.\nThe minimum Jenkins version is a useful way for plugin developers to indicate the range of Jenkins versions they are willing to support and test.\nSee the developer documentation to learn more about the recommended minimum Jenkins version.\nThe current minimum required Jenkins version is 2.462.3, which is why this pull request has been made.\nIf the plugin is already using the plugin bill of materials, then the bill of materials also needs to be updated with the matching artifactId for the minimum required Jenkins version.\nI can't see any change to the Jenkins version, how come?\nThis means your plugin POM was already using the 2.462.3 version but still required a few adjustments.\nThe checks fail, why?\nFor security reasons, the Jenkins infrastructure does not execute Jenkinsfiles proposed in pull requests.\nInstead, it builds the code using the Jenkinsfile from the default branch.\nIn this case, the existing Jenkinsfile specifies Java 8, not Java 11, which is causing the check to fail.\nTo resolve this,\na maintainer can replay the failed build\nby substituting the current Jenkinsfile content with our proposed changes using the \"replay the build\"\nfeature in Jenkins.\nPlease let us know if you need any assistance with this process.\nThanks for taking the time to review this PR.\nüôè",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 11,
    "title": "chore: Upgrade to latest LTS core version supporting Java 8 (requires 2.346.3)",
    "state": "OPEN",
    "createdAt": "2025-01-29T22:02:38Z",
    "updatedAt": "2025-02-15T20:19:47Z",
    "user": "gounthar",
    "repository": "jenkinsci/grypescanner-plugin",
    "pluginName": "grypescanner",
    "labels": null,
    "url": "https://github.com/jenkinsci/grypescanner-plugin/pull/11",
    "description": "Hello grypescanner developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.\n\nRemoving developers Tag from pom.xml\nJenkins no longer requires the developers tag in pom.xml, as the developers section was traditionally used to list individuals responsible for the plugin.\nInstead, Jenkins now uses the Repository Permission Updater (RPU) to manage permissions and developer information.\nBenefits of Removing developers Tag:\n\nSimplification: Removes unnecessary metadata from the pom.xml, resulting in a cleaner and more maintainable file.\nConsistency: Centralizes developer information management through the RPU, minimizing discrepancies.\nSecurity: Utilizes the RPU's controlled permission management, enhancing the security of artifact deployments.\n\nRemoving the developers tag aligns with modern Jenkins infrastructure standards and prevents outdated or redundant developer information from being included in plugin metadata.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 12,
    "title": "chore: Upgrade to latest LTS core version supporting Java 8 (requires 2.346.3)",
    "state": "OPEN",
    "createdAt": "2025-01-29T21:59:20Z",
    "updatedAt": "2025-02-15T20:23:23Z",
    "user": "gounthar",
    "repository": "jenkinsci/habitat-plugin",
    "pluginName": "habitat",
    "labels": null,
    "url": "https://github.com/jenkinsci/habitat-plugin/pull/12",
    "description": "Hello habitat developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.\n\nRemoving developers Tag from pom.xml\nJenkins no longer requires the developers tag in pom.xml, as the developers section was traditionally used to list individuals responsible for the plugin.\nInstead, Jenkins now uses the Repository Permission Updater (RPU) to manage permissions and developer information.\nBenefits of Removing developers Tag:\n\nSimplification: Removes unnecessary metadata from the pom.xml, resulting in a cleaner and more maintainable file.\nConsistency: Centralizes developer information management through the RPU, minimizing discrepancies.\nSecurity: Utilizes the RPU's controlled permission management, enhancing the security of artifact deployments.\n\nRemoving the developers tag aligns with modern Jenkins infrastructure standards and prevents outdated or redundant developer information from being included in plugin metadata.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 20,
    "title": "chore: Upgrade to latest LTS core version supporting Java 8 (requires 2.346.3)",
    "state": "OPEN",
    "createdAt": "2025-01-29T21:55:44Z",
    "updatedAt": "2025-02-15T20:26:27Z",
    "user": "gounthar",
    "repository": "jenkinsci/hashicorp-vault-pipeline-plugin",
    "pluginName": "hashicorp-vault-pipeline",
    "labels": null,
    "url": "https://github.com/jenkinsci/hashicorp-vault-pipeline-plugin/pull/20",
    "description": "Hello hashicorp-vault-pipeline developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.\n\nRemoving developers Tag from pom.xml\nJenkins no longer requires the developers tag in pom.xml, as the developers section was traditionally used to list individuals responsible for the plugin.\nInstead, Jenkins now uses the Repository Permission Updater (RPU) to manage permissions and developer information.\nBenefits of Removing developers Tag:\n\nSimplification: Removes unnecessary metadata from the pom.xml, resulting in a cleaner and more maintainable file.\nConsistency: Centralizes developer information management through the RPU, minimizing discrepancies.\nSecurity: Utilizes the RPU's controlled permission management, enhancing the security of artifact deployments.\n\nRemoving the developers tag aligns with modern Jenkins infrastructure standards and prevents outdated or redundant developer information from being included in plugin metadata.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 92,
    "title": "chore: Upgrade to latest LTS core version supporting Java 8 (requires 2.346.3)",
    "state": "OPEN",
    "createdAt": "2025-01-29T21:47:55Z",
    "updatedAt": "2025-02-25T09:45:26Z",
    "user": "gounthar",
    "repository": "jenkinsci/huaweicloud-ecs-plugin",
    "pluginName": "huaweicloud-ecs",
    "labels": null,
    "url": "https://github.com/jenkinsci/huaweicloud-ecs-plugin/pull/92",
    "description": "Hello huaweicloud-ecs developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.\n\nRemoving developers Tag from pom.xml\nJenkins no longer requires the developers tag in pom.xml, as the developers section was traditionally used to list individuals responsible for the plugin.\nInstead, Jenkins now uses the Repository Permission Updater (RPU) to manage permissions and developer information.\nBenefits of Removing developers Tag:\n\nSimplification: Removes unnecessary metadata from the pom.xml, resulting in a cleaner and more maintainable file.\nConsistency: Centralizes developer information management through the RPU, minimizing discrepancies.\nSecurity: Utilizes the RPU's controlled permission management, enhancing the security of artifact deployments.\n\nRemoving the developers tag aligns with modern Jenkins infrastructure standards and prevents outdated or redundant developer information from being included in plugin metadata.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 26,
    "title": "chore(pom): Use recommended core version 2.462.3, and Java 11.",
    "state": "OPEN",
    "createdAt": "2025-01-29T21:47:34Z",
    "updatedAt": "2025-01-29T21:52:34Z",
    "user": "gounthar",
    "repository": "jenkinsci/proxmox-plugin",
    "pluginName": "proxmox",
    "labels": null,
    "url": "https://github.com/jenkinsci/proxmox-plugin/pull/26",
    "description": "Hello proxmox developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version\n    io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version.\n\nWhy is this important?\nJenkins plugins declare a minimum supported Jenkins version.\nThe minimum Jenkins version is a useful way for plugin developers to indicate the range of Jenkins versions they are willing to support and test.\nSee the developer documentation to learn more about the recommended minimum Jenkins version.\nThe current minimum required Jenkins version is 2.462.3, which is why this pull request has been made.\nIf the plugin is already using the plugin bill of materials, then the bill of materials also needs to be updated with the matching artifactId for the minimum required Jenkins version.\nI can't see any change to the Jenkins version, how come?\nThis means your plugin POM was already using the 2.462.3 version but still required a few adjustments.\nThe checks fail, why?\nFor security reasons, the Jenkins infrastructure does not execute Jenkinsfiles proposed in pull requests.\nInstead, it builds the code using the Jenkinsfile from the default branch.\nIn this case, the existing Jenkinsfile specifies Java 8, not Java 11, which is causing the check to fail.\nTo resolve this,\na maintainer can replay the failed build\nby substituting the current Jenkinsfile content with our proposed changes using the \"replay the build\"\nfeature in Jenkins.\nPlease let us know if you need any assistance with this process.\nThanks for taking the time to review this PR.\nüôè",
    "checkStatus": "FAILURE"
  },
  {
    "number": 18,
    "title": "chore: Upgrade to latest LTS core version supporting Java 8 (requires 2.346.3)",
    "state": "OPEN",
    "createdAt": "2025-01-29T21:44:07Z",
    "updatedAt": "2025-02-15T20:34:05Z",
    "user": "gounthar",
    "repository": "jenkinsci/wsclean-plugin",
    "pluginName": "hudson-wsclean-plugin",
    "labels": null,
    "url": "https://github.com/jenkinsci/wsclean-plugin/pull/18",
    "description": "Hello hudson-wsclean-plugin developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.\n\nRemoving developers Tag from pom.xml\nJenkins no longer requires the developers tag in pom.xml, as the developers section was traditionally used to list individuals responsible for the plugin.\nInstead, Jenkins now uses the Repository Permission Updater (RPU) to manage permissions and developer information.\nBenefits of Removing developers Tag:\n\nSimplification: Removes unnecessary metadata from the pom.xml, resulting in a cleaner and more maintainable file.\nConsistency: Centralizes developer information management through the RPU, minimizing discrepancies.\nSecurity: Utilizes the RPU's controlled permission management, enhancing the security of artifact deployments.\n\nRemoving the developers tag aligns with modern Jenkins infrastructure standards and prevents outdated or redundant developer information from being included in plugin metadata.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 130,
    "title": "chore: Upgrade to latest LTS core version supporting Java 8 (requires 2.346.3)",
    "state": "OPEN",
    "createdAt": "2025-01-29T21:38:50Z",
    "updatedAt": "2025-02-15T20:39:01Z",
    "user": "gounthar",
    "repository": "jenkinsci/image-tag-parameter-plugin",
    "pluginName": "image-tag-parameter",
    "labels": null,
    "url": "https://github.com/jenkinsci/image-tag-parameter-plugin/pull/130",
    "description": "Hello image-tag-parameter developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.\n\nRemoving developers Tag from pom.xml\nJenkins no longer requires the developers tag in pom.xml, as the developers section was traditionally used to list individuals responsible for the plugin.\nInstead, Jenkins now uses the Repository Permission Updater (RPU) to manage permissions and developer information.\nBenefits of Removing developers Tag:\n\nSimplification: Removes unnecessary metadata from the pom.xml, resulting in a cleaner and more maintainable file.\nConsistency: Centralizes developer information management through the RPU, minimizing discrepancies.\nSecurity: Utilizes the RPU's controlled permission management, enhancing the security of artifact deployments.\n\nRemoving the developers tag aligns with modern Jenkins infrastructure standards and prevents outdated or redundant developer information from being included in plugin metadata.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 2,
    "title": "chore: Upgrade to latest LTS core version supporting Java 8 (requires 2.346.3)",
    "state": "OPEN",
    "createdAt": "2025-01-29T21:35:32Z",
    "updatedAt": "2025-02-15T20:43:13Z",
    "user": "gounthar",
    "repository": "jenkinsci/immuniweb-plugin",
    "pluginName": "immuniweb",
    "labels": null,
    "url": "https://github.com/jenkinsci/immuniweb-plugin/pull/2",
    "description": "Hello immuniweb developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.\n\nRemoving developers Tag from pom.xml\nJenkins no longer requires the developers tag in pom.xml, as the developers section was traditionally used to list individuals responsible for the plugin.\nInstead, Jenkins now uses the Repository Permission Updater (RPU) to manage permissions and developer information.\nBenefits of Removing developers Tag:\n\nSimplification: Removes unnecessary metadata from the pom.xml, resulting in a cleaner and more maintainable file.\nConsistency: Centralizes developer information management through the RPU, minimizing discrepancies.\nSecurity: Utilizes the RPU's controlled permission management, enhancing the security of artifact deployments.\n\nRemoving the developers tag aligns with modern Jenkins infrastructure standards and prevents outdated or redundant developer information from being included in plugin metadata.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 11,
    "title": "chore(pom): Use recommended core version 2.462.3, and Java 11.",
    "state": "CLOSED",
    "createdAt": "2025-01-29T21:33:08Z",
    "updatedAt": "2025-02-15T15:50:35Z",
    "user": "gounthar",
    "repository": "jenkinsci/skip-cron-rebuild-plugin",
    "pluginName": "skip-cron-rebuild",
    "labels": null,
    "url": "https://github.com/jenkinsci/skip-cron-rebuild-plugin/pull/11",
    "description": "Hello skip-cron-rebuild developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version\n    io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version.\n\nWhy is this important?\nJenkins plugins declare a minimum supported Jenkins version.\nThe minimum Jenkins version is a useful way for plugin developers to indicate the range of Jenkins versions they are willing to support and test.\nSee the developer documentation to learn more about the recommended minimum Jenkins version.\nThe current minimum required Jenkins version is 2.462.3, which is why this pull request has been made.\nIf the plugin is already using the plugin bill of materials, then the bill of materials also needs to be updated with the matching artifactId for the minimum required Jenkins version.\nI can't see any change to the Jenkins version, how come?\nThis means your plugin POM was already using the 2.462.3 version but still required a few adjustments.\nThe checks fail, why?\nFor security reasons, the Jenkins infrastructure does not execute Jenkinsfiles proposed in pull requests.\nInstead, it builds the code using the Jenkinsfile from the default branch.\nIn this case, the existing Jenkinsfile specifies Java 8, not Java 11, which is causing the check to fail.\nTo resolve this,\na maintainer can replay the failed build\nby substituting the current Jenkinsfile content with our proposed changes using the \"replay the build\"\nfeature in Jenkins.\nPlease let us know if you need any assistance with this process.\nThanks for taking the time to review this PR.\nüôè",
    "checkStatus": "FAILURE"
  },
  {
    "number": 11,
    "title": "chore: Upgrade to latest LTS core version supporting Java 8 (requires 2.346.3)",
    "state": "OPEN",
    "createdAt": "2025-01-29T21:27:47Z",
    "updatedAt": "2025-02-15T20:53:57Z",
    "user": "gounthar",
    "repository": "jenkinsci/instana-plugin",
    "pluginName": "instana",
    "labels": null,
    "url": "https://github.com/jenkinsci/instana-plugin/pull/11",
    "description": "Hello instana developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.\n\nRemoving developers Tag from pom.xml\nJenkins no longer requires the developers tag in pom.xml, as the developers section was traditionally used to list individuals responsible for the plugin.\nInstead, Jenkins now uses the Repository Permission Updater (RPU) to manage permissions and developer information.\nBenefits of Removing developers Tag:\n\nSimplification: Removes unnecessary metadata from the pom.xml, resulting in a cleaner and more maintainable file.\nConsistency: Centralizes developer information management through the RPU, minimizing discrepancies.\nSecurity: Utilizes the RPU's controlled permission management, enhancing the security of artifact deployments.\n\nRemoving the developers tag aligns with modern Jenkins infrastructure standards and prevents outdated or redundant developer information from being included in plugin metadata.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 24,
    "title": "chore: Upgrade to latest LTS core version supporting Java 8 (requires 2.346.3)",
    "state": "OPEN",
    "createdAt": "2025-01-29T21:22:41Z",
    "updatedAt": "2025-02-15T20:59:45Z",
    "user": "gounthar",
    "repository": "jenkinsci/ironmq-notifier-plugin",
    "pluginName": "ironmq-notifier",
    "labels": null,
    "url": "https://github.com/jenkinsci/ironmq-notifier-plugin/pull/24",
    "description": "Hello ironmq-notifier developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.\n\nRemoving developers Tag from pom.xml\nJenkins no longer requires the developers tag in pom.xml, as the developers section was traditionally used to list individuals responsible for the plugin.\nInstead, Jenkins now uses the Repository Permission Updater (RPU) to manage permissions and developer information.\nBenefits of Removing developers Tag:\n\nSimplification: Removes unnecessary metadata from the pom.xml, resulting in a cleaner and more maintainable file.\nConsistency: Centralizes developer information management through the RPU, minimizing discrepancies.\nSecurity: Utilizes the RPU's controlled permission management, enhancing the security of artifact deployments.\n\nRemoving the developers tag aligns with modern Jenkins infrastructure standards and prevents outdated or redundant developer information from being included in plugin metadata.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 33,
    "title": "chore: Upgrade to latest LTS core version supporting Java 8 (requires 2.346.3)",
    "state": "OPEN",
    "createdAt": "2025-01-29T21:14:13Z",
    "updatedAt": "2025-02-15T21:13:34Z",
    "user": "gounthar",
    "repository": "jenkinsci/jobcopy-builder-plugin",
    "pluginName": "jobcopy-builder",
    "labels": null,
    "url": "https://github.com/jenkinsci/jobcopy-builder-plugin/pull/33",
    "description": "Hello jobcopy-builder developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.\n\nRemoving developers Tag from pom.xml\nJenkins no longer requires the developers tag in pom.xml, as the developers section was traditionally used to list individuals responsible for the plugin.\nInstead, Jenkins now uses the Repository Permission Updater (RPU) to manage permissions and developer information.\nBenefits of Removing developers Tag:\n\nSimplification: Removes unnecessary metadata from the pom.xml, resulting in a cleaner and more maintainable file.\nConsistency: Centralizes developer information management through the RPU, minimizing discrepancies.\nSecurity: Utilizes the RPU's controlled permission management, enhancing the security of artifact deployments.\n\nRemoving the developers tag aligns with modern Jenkins infrastructure standards and prevents outdated or redundant developer information from being included in plugin metadata.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 35,
    "title": "chore: Upgrade to latest LTS core version supporting Java 8 (requires 2.346.3)",
    "state": "OPEN",
    "createdAt": "2025-01-29T20:54:13Z",
    "updatedAt": "2025-03-11T11:33:43Z",
    "user": "gounthar",
    "repository": "jenkinsci/katalon-plugin",
    "pluginName": "katalon",
    "labels": null,
    "url": "https://github.com/jenkinsci/katalon-plugin/pull/35",
    "description": "Hello katalon developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.\n\nRemoving developers Tag from pom.xml\nJenkins no longer requires the developers tag in pom.xml, as the developers section was traditionally used to list individuals responsible for the plugin.\nInstead, Jenkins now uses the Repository Permission Updater (RPU) to manage permissions and developer information.\nBenefits of Removing developers Tag:\n\nSimplification: Removes unnecessary metadata from the pom.xml, resulting in a cleaner and more maintainable file.\nConsistency: Centralizes developer information management through the RPU, minimizing discrepancies.\nSecurity: Utilizes the RPU's controlled permission management, enhancing the security of artifact deployments.\n\nRemoving the developers tag aligns with modern Jenkins infrastructure standards and prevents outdated or redundant developer information from being included in plugin metadata.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 3,
    "title": "chore: Upgrade to latest LTS core version supporting Java 8 (requires 2.346.3)",
    "state": "OPEN",
    "createdAt": "2025-01-29T20:48:18Z",
    "updatedAt": "2025-02-15T21:28:42Z",
    "user": "gounthar",
    "repository": "jenkinsci/kubesphere-token-auth-plugin",
    "pluginName": "kubesphere-token-auth",
    "labels": null,
    "url": "https://github.com/jenkinsci/kubesphere-token-auth-plugin/pull/3",
    "description": "Hello kubesphere-token-auth developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.\n\nRemoving developers Tag from pom.xml\nJenkins no longer requires the developers tag in pom.xml, as the developers section was traditionally used to list individuals responsible for the plugin.\nInstead, Jenkins now uses the Repository Permission Updater (RPU) to manage permissions and developer information.\nBenefits of Removing developers Tag:\n\nSimplification: Removes unnecessary metadata from the pom.xml, resulting in a cleaner and more maintainable file.\nConsistency: Centralizes developer information management through the RPU, minimizing discrepancies.\nSecurity: Utilizes the RPU's controlled permission management, enhancing the security of artifact deployments.\n\nRemoving the developers tag aligns with modern Jenkins infrastructure standards and prevents outdated or redundant developer information from being included in plugin metadata.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 6,
    "title": "chore: Upgrade to latest LTS core version supporting Java 8 (requires 2.346.3)",
    "state": "OPEN",
    "createdAt": "2025-01-29T20:43:14Z",
    "updatedAt": "2025-02-15T21:32:58Z",
    "user": "gounthar",
    "repository": "jenkinsci/lacework-security-scanner-plugin",
    "pluginName": "lacework-security-scanner",
    "labels": null,
    "url": "https://github.com/jenkinsci/lacework-security-scanner-plugin/pull/6",
    "description": "Hello lacework-security-scanner developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.\n\nRemoving developers Tag from pom.xml\nJenkins no longer requires the developers tag in pom.xml, as the developers section was traditionally used to list individuals responsible for the plugin.\nInstead, Jenkins now uses the Repository Permission Updater (RPU) to manage permissions and developer information.\nBenefits of Removing developers Tag:\n\nSimplification: Removes unnecessary metadata from the pom.xml, resulting in a cleaner and more maintainable file.\nConsistency: Centralizes developer information management through the RPU, minimizing discrepancies.\nSecurity: Utilizes the RPU's controlled permission management, enhancing the security of artifact deployments.\n\nRemoving the developers tag aligns with modern Jenkins infrastructure standards and prevents outdated or redundant developer information from being included in plugin metadata.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 9,
    "title": "chore: Upgrade to latest LTS core version supporting Java 8 (requires 2.346.3)",
    "state": "OPEN",
    "createdAt": "2025-01-29T20:39:51Z",
    "updatedAt": "2025-02-15T21:36:15Z",
    "user": "gounthar",
    "repository": "jenkinsci/levo-plugin",
    "pluginName": "levo",
    "labels": null,
    "url": "https://github.com/jenkinsci/levo-plugin/pull/9",
    "description": "Hello levo developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.\n\nRemoving developers Tag from pom.xml\nJenkins no longer requires the developers tag in pom.xml, as the developers section was traditionally used to list individuals responsible for the plugin.\nInstead, Jenkins now uses the Repository Permission Updater (RPU) to manage permissions and developer information.\nBenefits of Removing developers Tag:\n\nSimplification: Removes unnecessary metadata from the pom.xml, resulting in a cleaner and more maintainable file.\nConsistency: Centralizes developer information management through the RPU, minimizing discrepancies.\nSecurity: Utilizes the RPU's controlled permission management, enhancing the security of artifact deployments.\n\nRemoving the developers tag aligns with modern Jenkins infrastructure standards and prevents outdated or redundant developer information from being included in plugin metadata.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 18,
    "title": "chore: Upgrade to latest LTS core version supporting Java 8 (requires 2.346.3)",
    "state": "OPEN",
    "createdAt": "2025-01-29T20:31:23Z",
    "updatedAt": "2025-02-15T21:42:54Z",
    "user": "gounthar",
    "repository": "jenkinsci/llvm-cov-plugin",
    "pluginName": "llvm-cov",
    "labels": null,
    "url": "https://github.com/jenkinsci/llvm-cov-plugin/pull/18",
    "description": "Hello llvm-cov developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.\n\nRemoving developers Tag from pom.xml\nJenkins no longer requires the developers tag in pom.xml, as the developers section was traditionally used to list individuals responsible for the plugin.\nInstead, Jenkins now uses the Repository Permission Updater (RPU) to manage permissions and developer information.\nBenefits of Removing developers Tag:\n\nSimplification: Removes unnecessary metadata from the pom.xml, resulting in a cleaner and more maintainable file.\nConsistency: Centralizes developer information management through the RPU, minimizing discrepancies.\nSecurity: Utilizes the RPU's controlled permission management, enhancing the security of artifact deployments.\n\nRemoving the developers tag aligns with modern Jenkins infrastructure standards and prevents outdated or redundant developer information from being included in plugin metadata.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 11,
    "title": "Require 2.346.3",
    "state": "CLOSED",
    "createdAt": "2025-01-29T20:26:08Z",
    "updatedAt": "2025-02-11T11:32:02Z",
    "user": "gounthar",
    "repository": "jenkinsci/localization-support-plugin",
    "pluginName": "localization-support",
    "labels": null,
    "url": "https://github.com/jenkinsci/localization-support-plugin/pull/11",
    "description": "Hello localization-support developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 2,
    "title": "chore: Upgrade to latest LTS core version supporting Java 8 (requires 2.346.3)",
    "state": "OPEN",
    "createdAt": "2025-01-29T20:22:47Z",
    "updatedAt": "2025-02-15T21:46:47Z",
    "user": "gounthar",
    "repository": "jenkinsci/log-command-plugin",
    "pluginName": "log-command",
    "labels": null,
    "url": "https://github.com/jenkinsci/log-command-plugin/pull/2",
    "description": "Hello log-command developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.\n\nRemoving developers Tag from pom.xml\nJenkins no longer requires the developers tag in pom.xml, as the developers section was traditionally used to list individuals responsible for the plugin.\nInstead, Jenkins now uses the Repository Permission Updater (RPU) to manage permissions and developer information.\nBenefits of Removing developers Tag:\n\nSimplification: Removes unnecessary metadata from the pom.xml, resulting in a cleaner and more maintainable file.\nConsistency: Centralizes developer information management through the RPU, minimizing discrepancies.\nSecurity: Utilizes the RPU's controlled permission management, enhancing the security of artifact deployments.\n\nRemoving the developers tag aligns with modern Jenkins infrastructure standards and prevents outdated or redundant developer information from being included in plugin metadata.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 149,
    "title": "Require 2.440.3",
    "state": "MERGED",
    "createdAt": "2025-01-29T20:19:38Z",
    "updatedAt": "2025-01-30T03:44:22Z",
    "user": "gounthar",
    "repository": "jenkinsci/log-parser-plugin",
    "pluginName": "log-parser",
    "labels": null,
    "url": "https://github.com/jenkinsci/log-parser-plugin/pull/149",
    "description": "Hello log-parser developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 1,
    "title": "chore: Upgrade to latest LTS core version supporting Java 8 (requires 2.346.3)",
    "state": "OPEN",
    "createdAt": "2025-01-29T20:16:08Z",
    "updatedAt": "2025-02-15T21:54:20Z",
    "user": "gounthar",
    "repository": "jenkinsci/logback-nats-appender-plugin",
    "pluginName": "logback-nats-appender",
    "labels": null,
    "url": "https://github.com/jenkinsci/logback-nats-appender-plugin/pull/1",
    "description": "Hello logback-nats-appender developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.\n\nRemoving developers Tag from pom.xml\nJenkins no longer requires the developers tag in pom.xml, as the developers section was traditionally used to list individuals responsible for the plugin.\nInstead, Jenkins now uses the Repository Permission Updater (RPU) to manage permissions and developer information.\nBenefits of Removing developers Tag:\n\nSimplification: Removes unnecessary metadata from the pom.xml, resulting in a cleaner and more maintainable file.\nConsistency: Centralizes developer information management through the RPU, minimizing discrepancies.\nSecurity: Utilizes the RPU's controlled permission management, enhancing the security of artifact deployments.\n\nRemoving the developers tag aligns with modern Jenkins infrastructure standards and prevents outdated or redundant developer information from being included in plugin metadata.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 141,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T20:11:40Z",
    "updatedAt": "2025-01-29T20:11:40Z",
    "user": "gounthar",
    "repository": "jenkinsci/macstadium-orka-plugin",
    "pluginName": "macstadium-orka",
    "labels": null,
    "url": "https://github.com/jenkinsci/macstadium-orka-plugin/pull/141",
    "description": "Hello macstadium-orka developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 8,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T20:04:40Z",
    "updatedAt": "2025-01-29T20:04:40Z",
    "user": "gounthar",
    "repository": "jenkinsci/mergebase-sca-plugin",
    "pluginName": "mergebase-sca",
    "labels": null,
    "url": "https://github.com/jenkinsci/mergebase-sca-plugin/pull/8",
    "description": "Hello mergebase-sca developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 1,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T20:00:42Z",
    "updatedAt": "2025-01-29T20:00:42Z",
    "user": "gounthar",
    "repository": "jenkinsci/metadefender-plugin",
    "pluginName": "metadefender",
    "labels": null,
    "url": "https://github.com/jenkinsci/metadefender-plugin/pull/1",
    "description": "Hello metadefender developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 15,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T19:51:53Z",
    "updatedAt": "2025-01-29T19:51:53Z",
    "user": "gounthar",
    "repository": "jenkinsci/metrics-datadog-plugin",
    "pluginName": "metrics-datadog",
    "labels": null,
    "url": "https://github.com/jenkinsci/metrics-datadog-plugin/pull/15",
    "description": "Hello metrics-datadog developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 10,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T19:47:20Z",
    "updatedAt": "2025-01-29T19:47:20Z",
    "user": "gounthar",
    "repository": "jenkinsci/miniorange-saml-sp-plugin",
    "pluginName": "miniorange-saml-sp",
    "labels": null,
    "url": "https://github.com/jenkinsci/miniorange-saml-sp-plugin/pull/10",
    "description": "Hello miniorange-saml-sp developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 10,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T19:39:17Z",
    "updatedAt": "2025-01-29T19:39:17Z",
    "user": "gounthar",
    "repository": "jenkinsci/modernstatus-plugin",
    "pluginName": "modernstatus",
    "labels": null,
    "url": "https://github.com/jenkinsci/modernstatus-plugin/pull/10",
    "description": "Hello modernstatus developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 1,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T19:29:53Z",
    "updatedAt": "2025-01-29T19:29:53Z",
    "user": "gounthar",
    "repository": "jenkinsci/netdomain-labeler-plugin",
    "pluginName": "netdomain-labeler",
    "labels": null,
    "url": "https://github.com/jenkinsci/netdomain-labeler-plugin/pull/1",
    "description": "Hello netdomain-labeler developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 3,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T19:25:44Z",
    "updatedAt": "2025-01-29T19:25:44Z",
    "user": "gounthar",
    "repository": "jenkinsci/neuro-cucumber-plugin",
    "pluginName": "neuro-cucumber",
    "labels": null,
    "url": "https://github.com/jenkinsci/neuro-cucumber-plugin/pull/3",
    "description": "Hello neuro-cucumber developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 71,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T19:22:16Z",
    "updatedAt": "2025-01-29T19:22:16Z",
    "user": "gounthar",
    "repository": "jenkinsci/neuvector-vulnerability-scanner-plugin",
    "pluginName": "neuvector-vulnerability-scanner",
    "labels": null,
    "url": "https://github.com/jenkinsci/neuvector-vulnerability-scanner-plugin/pull/71",
    "description": "Hello neuvector-vulnerability-scanner developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 6,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T19:08:18Z",
    "updatedAt": "2025-01-29T19:08:18Z",
    "user": "gounthar",
    "repository": "jenkinsci/nuclei-plugin",
    "pluginName": "nuclei",
    "labels": null,
    "url": "https://github.com/jenkinsci/nuclei-plugin/pull/6",
    "description": "Hello nuclei developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 7,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T18:59:12Z",
    "updatedAt": "2025-01-29T18:59:12Z",
    "user": "gounthar",
    "repository": "jenkinsci/nutanix-calm-plugin",
    "pluginName": "nutanix-calm",
    "labels": null,
    "url": "https://github.com/jenkinsci/nutanix-calm-plugin/pull/7",
    "description": "Hello nutanix-calm developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 16,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T18:54:15Z",
    "updatedAt": "2025-01-29T18:54:15Z",
    "user": "gounthar",
    "repository": "jenkinsci/nvm-wrapper-plugin",
    "pluginName": "nvm-wrapper",
    "labels": null,
    "url": "https://github.com/jenkinsci/nvm-wrapper-plugin/pull/16",
    "description": "Hello nvm-wrapper developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 15,
    "title": "Require 2.414.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T18:48:50Z",
    "updatedAt": "2025-03-10T21:39:53Z",
    "user": "gounthar",
    "repository": "jenkinsci/octoperf-plugin",
    "pluginName": "octoperf",
    "labels": null,
    "url": "https://github.com/jenkinsci/octoperf-plugin/pull/15",
    "description": "Hello octoperf developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 4,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T18:40:16Z",
    "updatedAt": "2025-01-29T18:40:16Z",
    "user": "gounthar",
    "repository": "jenkinsci/opslevel-plugin",
    "pluginName": "opslevel",
    "labels": null,
    "url": "https://github.com/jenkinsci/opslevel-plugin/pull/4",
    "description": "Hello opslevel developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 16,
    "title": "feat(ci): Builds on the Jenkins Infrastructure",
    "state": "MERGED",
    "createdAt": "2025-01-29T18:36:49Z",
    "updatedAt": "2025-02-14T16:56:40Z",
    "user": "gounthar",
    "repository": "jenkinsci/vmanager-plugin",
    "pluginName": "vmanager-plugin",
    "labels": null,
    "url": "https://github.com/jenkinsci/vmanager-plugin/pull/16",
    "description": "Hello vmanager-plugin developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Setup the Jenkinsfile\n    io.jenkins.tools.pluginmodernizer.SetupJenkinsfile\n    Add a missing Jenkinsfile to the Jenkins plugin.\n\nWhy is this important?\nThis pull request ensure your plugin is build on the Jenkins infrastructure.\nBased on your plugin requirements, the Jenkins infrastructure will build your plugin using Java 17 and 21.\nYour plugin is already building with Java 17 and 21. We will continue to support these versions.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 9,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T18:26:44Z",
    "updatedAt": "2025-01-29T18:26:44Z",
    "user": "gounthar",
    "repository": "jenkinsci/osf-builder-suite-for-sfcc-run-job-plugin",
    "pluginName": "osf-builder-suite-for-sfcc-run-job",
    "labels": null,
    "url": "https://github.com/jenkinsci/osf-builder-suite-for-sfcc-run-job-plugin/pull/9",
    "description": "Hello osf-builder-suite-for-sfcc-run-job developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 15,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T18:20:25Z",
    "updatedAt": "2025-01-29T18:20:25Z",
    "user": "gounthar",
    "repository": "jenkinsci/ostorlab-plugin",
    "pluginName": "ostorlab",
    "labels": null,
    "url": "https://github.com/jenkinsci/ostorlab-plugin/pull/15",
    "description": "Hello ostorlab developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 2,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T18:14:08Z",
    "updatedAt": "2025-01-29T18:14:08Z",
    "user": "gounthar",
    "repository": "jenkinsci/oversecured-plugin",
    "pluginName": "oversecured",
    "labels": null,
    "url": "https://github.com/jenkinsci/oversecured-plugin/pull/2",
    "description": "Hello oversecured developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 15,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T17:58:47Z",
    "updatedAt": "2025-02-25T08:17:45Z",
    "user": "gounthar",
    "repository": "jenkinsci/pipeline-global-lib-nexus-plugin",
    "pluginName": "pipeline-global-lib-nexus",
    "labels": null,
    "url": "https://github.com/jenkinsci/pipeline-global-lib-nexus-plugin/pull/15",
    "description": "Hello pipeline-global-lib-nexus developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 6,
    "title": "Require 2.452.4",
    "state": "OPEN",
    "createdAt": "2025-01-29T17:50:56Z",
    "updatedAt": "2025-02-14T15:52:32Z",
    "user": "gounthar",
    "repository": "jenkinsci/pipeline-keep-running-step-plugin",
    "pluginName": "pipeline-keep-running-step",
    "labels": null,
    "url": "https://github.com/jenkinsci/pipeline-keep-running-step-plugin/pull/6",
    "description": "Hello pipeline-keep-running-step developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 1,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T17:42:46Z",
    "updatedAt": "2025-02-14T15:44:33Z",
    "user": "gounthar",
    "repository": "jenkinsci/portscanner-plugin",
    "pluginName": "portscanner",
    "labels": null,
    "url": "https://github.com/jenkinsci/portscanner-plugin/pull/1",
    "description": "Hello portscanner developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 5,
    "title": "Require 2.462.3",
    "state": "MERGED",
    "createdAt": "2025-01-29T17:30:52Z",
    "updatedAt": "2025-02-13T14:23:04Z",
    "user": "gounthar",
    "repository": "jenkinsci/probely-security-plugin",
    "pluginName": "probely-security",
    "labels": null,
    "url": "https://github.com/jenkinsci/probely-security-plugin/pull/5",
    "description": "Hello probely-security developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 25,
    "title": "Require 2.346.3",
    "state": "MERGED",
    "createdAt": "2025-01-29T17:22:13Z",
    "updatedAt": "2025-01-29T18:46:53Z",
    "user": "gounthar",
    "repository": "jenkinsci/proxmox-plugin",
    "pluginName": "proxmox",
    "labels": null,
    "url": "https://github.com/jenkinsci/proxmox-plugin/pull/25",
    "description": "Hello proxmox developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 7,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T17:12:54Z",
    "updatedAt": "2025-02-14T15:30:39Z",
    "user": "gounthar",
    "repository": "jenkinsci/publish-over-dropbox-plugin",
    "pluginName": "publish-over-dropbox",
    "labels": null,
    "url": "https://github.com/jenkinsci/publish-over-dropbox-plugin/pull/7",
    "description": "Hello publish-over-dropbox developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 9,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T16:54:20Z",
    "updatedAt": "2025-02-14T15:23:06Z",
    "user": "gounthar",
    "repository": "jenkinsci/qiniu-plugin",
    "pluginName": "qiniu",
    "labels": null,
    "url": "https://github.com/jenkinsci/qiniu-plugin/pull/9",
    "description": "Hello qiniu developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 50,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T16:48:10Z",
    "updatedAt": "2025-02-14T15:18:08Z",
    "user": "gounthar",
    "repository": "jenkinsci/qualys-vm-plugin",
    "pluginName": "qualys-vm",
    "labels": null,
    "url": "https://github.com/jenkinsci/qualys-vm-plugin/pull/50",
    "description": "Hello qualys-vm developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 36,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T16:42:58Z",
    "updatedAt": "2025-02-14T15:14:50Z",
    "user": "gounthar",
    "repository": "jenkinsci/qualys-was-plugin",
    "pluginName": "qualys-was",
    "labels": null,
    "url": "https://github.com/jenkinsci/qualys-was-plugin/pull/36",
    "description": "Hello qualys-was developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 11,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T16:38:33Z",
    "updatedAt": "2025-02-14T15:11:26Z",
    "user": "gounthar",
    "repository": "jenkinsci/qy-wechat-notification-plugin",
    "pluginName": "qy-wechat-notification",
    "labels": null,
    "url": "https://github.com/jenkinsci/qy-wechat-notification-plugin/pull/11",
    "description": "Hello qy-wechat-notification developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 13,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T16:32:21Z",
    "updatedAt": "2025-02-14T15:06:15Z",
    "user": "gounthar",
    "repository": "jenkinsci/rabbitmq-publisher-plugin",
    "pluginName": "rabbitmq-publisher",
    "labels": null,
    "url": "https://github.com/jenkinsci/rabbitmq-publisher-plugin/pull/13",
    "description": "Hello rabbitmq-publisher developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 36,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T16:24:53Z",
    "updatedAt": "2025-02-14T14:58:52Z",
    "user": "gounthar",
    "repository": "jenkinsci/rapid7-insightvm-container-assessment-plugin",
    "pluginName": "rapid7-insightvm-container-assessment",
    "labels": null,
    "url": "https://github.com/jenkinsci/rapid7-insightvm-container-assessment-plugin/pull/36",
    "description": "Hello rapid7-insightvm-container-assessment developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 3,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T16:12:11Z",
    "updatedAt": "2025-02-14T14:54:31Z",
    "user": "gounthar",
    "repository": "jenkinsci/rapiddeploy-plugin",
    "pluginName": "rapiddeploy-jenkins",
    "labels": null,
    "url": "https://github.com/jenkinsci/rapiddeploy-plugin/pull/3",
    "description": "Hello rapiddeploy-jenkins developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 4,
    "title": "Require 2.346.3",
    "state": "MERGED",
    "createdAt": "2025-01-29T15:53:40Z",
    "updatedAt": "2025-02-11T09:42:33Z",
    "user": "gounthar",
    "repository": "jenkinsci/reliza-integration-plugin",
    "pluginName": "reliza-integration",
    "labels": null,
    "url": "https://github.com/jenkinsci/reliza-integration-plugin/pull/4",
    "description": "Hello reliza-integration developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 90,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T15:47:30Z",
    "updatedAt": "2025-02-14T14:48:21Z",
    "user": "gounthar",
    "repository": "jenkinsci/repo-plugin",
    "pluginName": "repo",
    "labels": null,
    "url": "https://github.com/jenkinsci/repo-plugin/pull/90",
    "description": "Hello repo developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 67,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T15:42:09Z",
    "updatedAt": "2025-02-14T14:43:53Z",
    "user": "gounthar",
    "repository": "jenkinsci/repository-connector-plugin",
    "pluginName": "repository-connector",
    "labels": null,
    "url": "https://github.com/jenkinsci/repository-connector-plugin/pull/67",
    "description": "Hello repository-connector developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 7,
    "title": "chore(pom): Use recommended core version 2.462.3, and Java 11.",
    "state": "CLOSED",
    "createdAt": "2025-01-29T15:37:54Z",
    "updatedAt": "2025-02-14T15:54:11Z",
    "user": "gounthar",
    "repository": "jenkinsci/shutdown-queue-plugin",
    "pluginName": "shutdown-queue",
    "labels": null,
    "url": "https://github.com/jenkinsci/shutdown-queue-plugin/pull/7",
    "description": "Hello shutdown-queue developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version\n    io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version.\n\nWhy is this important?\nJenkins plugins declare a minimum supported Jenkins version.\nThe minimum Jenkins version is a useful way for plugin developers to indicate the range of Jenkins versions they are willing to support and test.\nSee the developer documentation to learn more about the recommended minimum Jenkins version.\nThe current minimum required Jenkins version is 2.462.3, which is why this pull request has been made.\nIf the plugin is already using the plugin bill of materials, then the bill of materials also needs to be updated with the matching artifactId for the minimum required Jenkins version.\nI can't see any change to the Jenkins version, how come?\nThis means your plugin POM was already using the 2.462.3 version but still required a few adjustments.\nThe checks fail, why?\nFor security reasons, the Jenkins infrastructure does not execute Jenkinsfiles proposed in pull requests.\nInstead, it builds the code using the Jenkinsfile from the default branch.\nIn this case, the existing Jenkinsfile specifies Java 8, not Java 11, which is causing the check to fail.\nTo resolve this, a maintainer can replay the failed build by substituting the current Jenkinsfile content with our proposed changes using the \"replay the build\" feature in Jenkins.\nPlease let us know if you need any assistance with this process.\nThanks for taking the time to review this PR.\nüôè",
    "checkStatus": "FAILURE"
  },
  {
    "number": 10,
    "title": "Require 2.414.3",
    "state": "MERGED",
    "createdAt": "2025-01-29T15:35:27Z",
    "updatedAt": "2025-02-05T14:17:37Z",
    "user": "gounthar",
    "repository": "jenkinsci/requests-plugin",
    "pluginName": "requests",
    "labels": null,
    "url": "https://github.com/jenkinsci/requests-plugin/pull/10",
    "description": "Hello requests developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 11,
    "title": "Require 2.346.3",
    "state": "MERGED",
    "createdAt": "2025-01-29T15:31:38Z",
    "updatedAt": "2025-01-30T09:04:28Z",
    "user": "gounthar",
    "repository": "jenkinsci/results-cache-plugin",
    "pluginName": "results-cache",
    "labels": null,
    "url": "https://github.com/jenkinsci/results-cache-plugin/pull/11",
    "description": "Hello results-cache developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 10,
    "title": "Require 2.375.4",
    "state": "CLOSED",
    "createdAt": "2025-01-29T15:27:04Z",
    "updatedAt": "2025-03-10T19:12:08Z",
    "user": "gounthar",
    "repository": "jenkinsci/rich-text-publisher-plugin",
    "pluginName": "rich-text-publisher-plugin",
    "labels": null,
    "url": "https://github.com/jenkinsci/rich-text-publisher-plugin/pull/10",
    "description": "Hello rich-text-publisher-plugin developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 2,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T15:13:07Z",
    "updatedAt": "2025-02-14T14:18:20Z",
    "user": "gounthar",
    "repository": "jenkinsci/secure-post-script-plugin",
    "pluginName": "secure-post-script",
    "labels": null,
    "url": "https://github.com/jenkinsci/secure-post-script-plugin/pull/2",
    "description": "Hello secure-post-script developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 3,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T15:03:20Z",
    "updatedAt": "2025-02-14T14:07:14Z",
    "user": "gounthar",
    "repository": "jenkinsci/sematext-plugin",
    "pluginName": "sematext",
    "labels": null,
    "url": "https://github.com/jenkinsci/sematext-plugin/pull/3",
    "description": "Hello sematext developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 42,
    "title": "Require 2.346.3",
    "state": "MERGED",
    "createdAt": "2025-01-29T14:55:06Z",
    "updatedAt": "2025-02-19T08:57:28Z",
    "user": "gounthar",
    "repository": "jenkinsci/shelve-project-plugin",
    "pluginName": "shelve-project-plugin",
    "labels": [
      "chore"
    ],
    "url": "https://github.com/jenkinsci/shelve-project-plugin/pull/42",
    "description": "Hello shelve-project-plugin developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 9,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T14:49:29Z",
    "updatedAt": "2025-02-14T13:49:29Z",
    "user": "gounthar",
    "repository": "jenkinsci/shortcut-job-plugin",
    "pluginName": "shortcut-job",
    "labels": null,
    "url": "https://github.com/jenkinsci/shortcut-job-plugin/pull/9",
    "description": "Hello shortcut-job developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 6,
    "title": "Require 2.346.3",
    "state": "MERGED",
    "createdAt": "2025-01-29T14:45:30Z",
    "updatedAt": "2025-01-29T15:33:01Z",
    "user": "gounthar",
    "repository": "jenkinsci/shutdown-queue-plugin",
    "pluginName": "shutdown-queue",
    "labels": null,
    "url": "https://github.com/jenkinsci/shutdown-queue-plugin/pull/6",
    "description": "Hello shutdown-queue developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 51,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T14:41:10Z",
    "updatedAt": "2025-02-14T13:40:59Z",
    "user": "gounthar",
    "repository": "jenkinsci/skenai-plugin",
    "pluginName": "skenai",
    "labels": null,
    "url": "https://github.com/jenkinsci/skenai-plugin/pull/51",
    "description": "Hello skenai developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 10,
    "title": "Require 2.346.3",
    "state": "MERGED",
    "createdAt": "2025-01-29T14:37:31Z",
    "updatedAt": "2025-01-29T21:11:01Z",
    "user": "gounthar",
    "repository": "jenkinsci/skip-cron-rebuild-plugin",
    "pluginName": "skip-cron-rebuild",
    "labels": null,
    "url": "https://github.com/jenkinsci/skip-cron-rebuild-plugin/pull/10",
    "description": "Hello skip-cron-rebuild developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 79,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T14:28:02Z",
    "updatedAt": "2025-02-14T13:28:00Z",
    "user": "gounthar",
    "repository": "jenkinsci/solarized-theme-plugin",
    "pluginName": "solarized-theme",
    "labels": null,
    "url": "https://github.com/jenkinsci/solarized-theme-plugin/pull/79",
    "description": "Hello solarized-theme developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 4,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T14:20:49Z",
    "updatedAt": "2025-02-14T13:21:34Z",
    "user": "gounthar",
    "repository": "jenkinsci/split-admin-plugin",
    "pluginName": "split-admin",
    "labels": null,
    "url": "https://github.com/jenkinsci/split-admin-plugin/pull/4",
    "description": "Hello split-admin developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 1,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T14:11:43Z",
    "updatedAt": "2025-02-14T13:12:26Z",
    "user": "gounthar",
    "repository": "jenkinsci/stackrox-container-image-scanner-plugin",
    "pluginName": "stackrox-container-image-scanner",
    "labels": null,
    "url": "https://github.com/jenkinsci/stackrox-container-image-scanner-plugin/pull/1",
    "description": "Hello stackrox-container-image-scanner developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 189,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T14:03:01Z",
    "updatedAt": "2025-02-14T13:03:45Z",
    "user": "gounthar",
    "repository": "jenkinsci/stash-pullrequest-builder-plugin",
    "pluginName": "stash-pullrequest-builder",
    "labels": null,
    "url": "https://github.com/jenkinsci/stash-pullrequest-builder-plugin/pull/189",
    "description": "Hello stash-pullrequest-builder developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 55,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T13:56:09Z",
    "updatedAt": "2025-02-14T12:55:51Z",
    "user": "gounthar",
    "repository": "jenkinsci/statuspage-gating-plugin",
    "pluginName": "statuspage-gating",
    "labels": null,
    "url": "https://github.com/jenkinsci/statuspage-gating-plugin/pull/55",
    "description": "Hello statuspage-gating developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 5,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T13:47:12Z",
    "updatedAt": "2025-02-14T12:46:26Z",
    "user": "gounthar",
    "repository": "jenkinsci/teams-webhook-trigger-plugin",
    "pluginName": "teams-webhook-trigger",
    "labels": null,
    "url": "https://github.com/jenkinsci/teams-webhook-trigger-plugin/pull/5",
    "description": "Hello teams-webhook-trigger developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 15,
    "title": "feat(java): Require Jenkins core 2.479.1 and Java 17.",
    "state": "CLOSED",
    "createdAt": "2025-01-29T13:44:52Z",
    "updatedAt": "2025-02-14T16:56:49Z",
    "user": "gounthar",
    "repository": "jenkinsci/vmanager-plugin",
    "pluginName": "vmanager-plugin",
    "labels": null,
    "url": "https://github.com/jenkinsci/vmanager-plugin/pull/15",
    "description": "Hello vmanager-plugin developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the next major parent version (5.X) requiring Jenkins 2.479 and Java 17\n    io.jenkins.tools.pluginmodernizer.UpgradeNextMajorParentVersion\n    Upgrade to the next major parent version (5.X) requiring Jenkins 2.479 and Java 17.\n\nWhy Upgrade to Java 17 and Jenkins 2.479.x?\n\n\nEmbrace Java 17 LTS Stability: Benefit from long-term support with modern language features that improve development practice and plugin performance.\n\n\nHarness Jenkins 2.479.x Innovations: Stay aligned with the latest features and stability improvements, ensuring smooth integration and future-proofing.\n\n\nEnhance Security: Protect your plugin with up-to-date security fixes from both Java 17 and Jenkins core improvements.\n\n\nAlign with the Community: Keep pace with ecosystem shifts towards Java 17, ensuring compatibility and expanding your plugin's user base.\n\n\nEnjoy a Better Developer Experience: Make the most of advanced tooling support and simplified dependency management with Java 17's enhancements.\n\n\nBy upgrading, you'll be positioning your plugin at the forefront of performance, security, and user satisfaction. We encourage you to explore these updates and provide feedback. Let's continue to build a robust Jenkins ecosystem together!",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 362,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T13:41:57Z",
    "updatedAt": "2025-02-14T15:28:09Z",
    "user": "gounthar",
    "repository": "jenkinsci/tekton-client-plugin",
    "pluginName": "tekton-client",
    "labels": null,
    "url": "https://github.com/jenkinsci/tekton-client-plugin/pull/362",
    "description": "Hello tekton-client developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 5,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T13:33:15Z",
    "updatedAt": "2025-02-14T12:36:13Z",
    "user": "gounthar",
    "repository": "jenkinsci/testcafe-plugin",
    "pluginName": "testcafe",
    "labels": null,
    "url": "https://github.com/jenkinsci/testcafe-plugin/pull/5",
    "description": "Hello testcafe developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 22,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T13:26:37Z",
    "updatedAt": "2025-02-14T12:30:20Z",
    "user": "gounthar",
    "repository": "jenkinsci/testflo-for-jira-test-management-automation-plugin",
    "pluginName": "testflo-for-jira-test-management-automation",
    "labels": null,
    "url": "https://github.com/jenkinsci/testflo-for-jira-test-management-automation-plugin/pull/22",
    "description": "Hello testflo-for-jira-test-management-automation developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 20,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T13:11:20Z",
    "updatedAt": "2025-02-14T12:17:17Z",
    "user": "gounthar",
    "repository": "jenkinsci/thycotic-devops-secrets-vault-plugin",
    "pluginName": "thycotic-devops-secrets-vault",
    "labels": null,
    "url": "https://github.com/jenkinsci/thycotic-devops-secrets-vault-plugin/pull/20",
    "description": "Hello thycotic-devops-secrets-vault developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 38,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T13:06:07Z",
    "updatedAt": "2025-02-14T12:12:41Z",
    "user": "gounthar",
    "repository": "jenkinsci/thycotic-secret-server-plugin",
    "pluginName": "thycotic-secret-server",
    "labels": null,
    "url": "https://github.com/jenkinsci/thycotic-secret-server-plugin/pull/38",
    "description": "Hello thycotic-secret-server developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 108,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T13:00:12Z",
    "updatedAt": "2025-02-14T12:07:25Z",
    "user": "gounthar",
    "repository": "jenkinsci/typetalk-plugin",
    "pluginName": "typetalk",
    "labels": null,
    "url": "https://github.com/jenkinsci/typetalk-plugin/pull/108",
    "description": "Hello typetalk developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 16,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T12:52:35Z",
    "updatedAt": "2025-02-14T11:59:50Z",
    "user": "gounthar",
    "repository": "jenkinsci/uleska-plugin",
    "pluginName": "uleska",
    "labels": null,
    "url": "https://github.com/jenkinsci/uleska-plugin/pull/16",
    "description": "Hello uleska developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 22,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T12:45:03Z",
    "updatedAt": "2025-02-14T11:52:44Z",
    "user": "gounthar",
    "repository": "jenkinsci/upload-build-to-sofy-plugin",
    "pluginName": "upload-build-to-sofy",
    "labels": null,
    "url": "https://github.com/jenkinsci/upload-build-to-sofy-plugin/pull/22",
    "description": "Hello upload-build-to-sofy developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 12,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T12:41:20Z",
    "updatedAt": "2025-02-14T11:47:10Z",
    "user": "gounthar",
    "repository": "jenkinsci/upload-pgyer-plugin",
    "pluginName": "upload-pgyer",
    "labels": null,
    "url": "https://github.com/jenkinsci/upload-pgyer-plugin/pull/12",
    "description": "Hello upload-pgyer developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 4,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T11:17:38Z",
    "updatedAt": "2025-02-14T11:36:41Z",
    "user": "gounthar",
    "repository": "jenkinsci/vdoo-vision-plugin",
    "pluginName": "vdoo-vision",
    "labels": null,
    "url": "https://github.com/jenkinsci/vdoo-vision-plugin/pull/4",
    "description": "Hello vdoo-vision developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 50,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T11:08:28Z",
    "updatedAt": "2025-02-14T11:18:33Z",
    "user": "gounthar",
    "repository": "jenkinsci/visualexpert-plugin",
    "pluginName": "visualexpert",
    "labels": null,
    "url": "https://github.com/jenkinsci/visualexpert-plugin/pull/50",
    "description": "Hello visualexpert developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 83,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T11:00:37Z",
    "updatedAt": "2025-02-14T11:02:35Z",
    "user": "gounthar",
    "repository": "jenkinsci/vstestrunner-plugin",
    "pluginName": "vstestrunner",
    "labels": null,
    "url": "https://github.com/jenkinsci/vstestrunner-plugin/pull/83",
    "description": "Hello vstestrunner developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 3,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T10:49:21Z",
    "updatedAt": "2025-02-14T10:51:55Z",
    "user": "gounthar",
    "repository": "jenkinsci/wetest-automation-plugin",
    "pluginName": "wetest-automation",
    "labels": null,
    "url": "https://github.com/jenkinsci/wetest-automation-plugin/pull/3",
    "description": "Hello wetest-automation developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 2,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T10:35:26Z",
    "updatedAt": "2025-02-14T10:38:22Z",
    "user": "gounthar",
    "repository": "jenkinsci/wsap-plugin",
    "pluginName": "wsap",
    "labels": null,
    "url": "https://github.com/jenkinsci/wsap-plugin/pull/2",
    "description": "Hello wsap developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 161,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T10:27:48Z",
    "updatedAt": "2025-02-14T10:31:04Z",
    "user": "gounthar",
    "repository": "jenkinsci/xcode-plugin",
    "pluginName": "xcode-plugin",
    "labels": null,
    "url": "https://github.com/jenkinsci/xcode-plugin/pull/161",
    "description": "Hello xcode-plugin developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 27,
    "title": "Require 2.346.3",
    "state": "MERGED",
    "createdAt": "2025-01-29T10:18:16Z",
    "updatedAt": "2025-02-04T15:19:56Z",
    "user": "gounthar",
    "repository": "jenkinsci/yet-another-build-visualizer-plugin",
    "pluginName": "yet-another-build-visualizer",
    "labels": null,
    "url": "https://github.com/jenkinsci/yet-another-build-visualizer-plugin/pull/27",
    "description": "Hello yet-another-build-visualizer developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 49,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T10:12:23Z",
    "updatedAt": "2025-02-14T10:09:05Z",
    "user": "gounthar",
    "repository": "jenkinsci/zap-pipeline-plugin",
    "pluginName": "zap-pipeline",
    "labels": null,
    "url": "https://github.com/jenkinsci/zap-pipeline-plugin/pull/49",
    "description": "Hello zap-pipeline developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 8,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T10:04:37Z",
    "updatedAt": "2025-02-14T09:56:53Z",
    "user": "gounthar",
    "repository": "jenkinsci/zerobug-plugin",
    "pluginName": "zerobug",
    "labels": null,
    "url": "https://github.com/jenkinsci/zerobug-plugin/pull/8",
    "description": "Hello zerobug developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 20,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T10:00:36Z",
    "updatedAt": "2025-02-14T09:50:11Z",
    "user": "gounthar",
    "repository": "jenkinsci/zoom-plugin",
    "pluginName": "zoom",
    "labels": null,
    "url": "https://github.com/jenkinsci/zoom-plugin/pull/20",
    "description": "Hello zoom developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 61,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-29T09:56:09Z",
    "updatedAt": "2025-02-14T09:42:57Z",
    "user": "gounthar",
    "repository": "jenkinsci/zscaler-iac-scan-plugin",
    "pluginName": "zscaler-iac-scan",
    "labels": null,
    "url": "https://github.com/jenkinsci/zscaler-iac-scan-plugin/pull/61",
    "description": "Hello zscaler-iac-scan developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 191,
    "title": "feat(java): Require Jenkins core 2.479.1 and Java 17.",
    "state": "MERGED",
    "createdAt": "2025-01-29T05:35:30Z",
    "updatedAt": "2025-02-22T20:13:42Z",
    "user": "jonesbusy",
    "repository": "jenkinsci/trilead-api-plugin",
    "pluginName": "trilead-api",
    "labels": null,
    "url": "https://github.com/jenkinsci/trilead-api-plugin/pull/191",
    "description": "Hello trilead-api developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the next major parent version (5.X) requiring Jenkins 2.479 and Java 17\n    io.jenkins.tools.pluginmodernizer.UpgradeNextMajorParentVersion\n    Upgrade to the next major parent version (5.X) requiring Jenkins 2.479 and Java 17.\n\nWhy Upgrade to Java 17 and Jenkins 2.479.x?\n\n\nEmbrace Java 17 LTS Stability: Benefit from long-term support with modern language features that improve development practice and plugin performance.\n\n\nHarness Jenkins 2.479.x Innovations: Stay aligned with the latest features and stability improvements, ensuring smooth integration and future-proofing.\n\n\nEnhance Security: Protect your plugin with up-to-date security fixes from both Java 17 and Jenkins core improvements.\n\n\nAlign with the Community: Keep pace with ecosystem shifts towards Java 17, ensuring compatibility and expanding your plugin's user base.\n\n\nEnjoy a Better Developer Experience: Make the most of advanced tooling support and simplified dependency management with Java 17's enhancements.\n\n\nBy upgrading, you'll be positioning your plugin at the forefront of performance, security, and user satisfaction. We encourage you to explore these updates and provide feedback. Let's continue to build a robust Jenkins ecosystem together!",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 21,
    "title": "chore(pom): Require 2.462.3",
    "state": "OPEN",
    "createdAt": "2025-01-28T14:52:16Z",
    "updatedAt": "2025-01-28T14:52:32Z",
    "user": "jonesbusy",
    "repository": "jenkinsci/onepassword-secrets-plugin",
    "pluginName": "onepassword-secrets",
    "labels": null,
    "url": "https://github.com/jenkinsci/onepassword-secrets-plugin/pull/21",
    "description": "Hello onepassword-secrets developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version\n    io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version.\n\nWhy is this important?\nJenkins plugins declare a minimum supported Jenkins version.\nThe minimum Jenkins version is a useful way for plugin developers to indicate the range of Jenkins versions they are willing to support and test.\nSee the developer documentation to learn more about the recommended minimum Jenkins version.\nThe current minimum required Jenkins version is 2.462.3, which is why this pull request has been made.\nIf the plugin is already using the plugin bill of materials, then the bill of materials also needs to be updated with the matching artifactId for the minimum required Jenkins version.\nI can't see any change to the Jenkins version, how come?\nThis means your plugin POM was already using the 2.462.3 version but still required a few adjustments.\nThanks for taking the time to review this PR. üôè",
    "checkStatus": "FAILURE"
  },
  {
    "number": 11,
    "title": "feat(java): Require Jenkins core 2.479.1 and Java 17.",
    "state": "OPEN",
    "createdAt": "2025-01-28T10:27:25Z",
    "updatedAt": "2025-01-28T10:27:25Z",
    "user": "gounthar",
    "repository": "jenkinsci/sonargraph-integration-plugin",
    "pluginName": "sonargraph-integration",
    "labels": null,
    "url": "https://github.com/jenkinsci/sonargraph-integration-plugin/pull/11",
    "description": "Hello sonargraph-integration developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the next major parent version (5.X) requiring Jenkins 2.479 and Java 17\n    io.jenkins.tools.pluginmodernizer.UpgradeNextMajorParentVersion\n    Upgrade to the next major parent version (5.X) requiring Jenkins 2.479 and Java 17.\n\nWhy Upgrade to Java 17 and Jenkins 2.479.x?\n\n\nEmbrace Java 17 LTS Stability: Benefit from long-term support with modern language features that improve development practice and plugin performance.\n\n\nHarness Jenkins 2.479.x Innovations: Stay aligned with the latest features and stability improvements, ensuring smooth integration and future-proofing.\n\n\nEnhance Security: Protect your plugin with up-to-date security fixes from both Java 17 and Jenkins core improvements.\n\n\nAlign with the Community: Keep pace with ecosystem shifts towards Java 17, ensuring compatibility and expanding your plugin's user base.\n\n\nEnjoy a Better Developer Experience: Make the most of advanced tooling support and simplified dependency management with Java 17's enhancements.\n\n\nBy upgrading, you'll be positioning your plugin at the forefront of performance, security, and user satisfaction. We encourage you to explore these updates and provide feedback. Let's continue to build a robust Jenkins ecosystem together!",
    "checkStatus": "FAILURE"
  },
  {
    "number": 11,
    "title": "feat(java): Require Jenkins core 2.479.1 and Java 17.",
    "state": "MERGED",
    "createdAt": "2025-01-27T18:18:57Z",
    "updatedAt": "2025-01-30T21:11:00Z",
    "user": "gounthar",
    "repository": "jenkinsci/send-stacktrace-to-eclipse-plugin",
    "pluginName": "send-stacktrace-to-eclipse-plugin",
    "labels": null,
    "url": "https://github.com/jenkinsci/send-stacktrace-to-eclipse-plugin/pull/11",
    "description": "Hello send-stacktrace-to-eclipse-plugin developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the next major parent version (5.X) requiring Jenkins 2.479 and Java 17\n    io.jenkins.tools.pluginmodernizer.UpgradeNextMajorParentVersion\n    Upgrade to the next major parent version (5.X) requiring Jenkins 2.479 and Java 17.\n\nWhy Upgrade to Java 17 and Jenkins 2.479.x?\n\n\nEmbrace Java 17 LTS Stability: Benefit from long-term support with modern language features that improve development practice and plugin performance.\n\n\nHarness Jenkins 2.479.x Innovations: Stay aligned with the latest features and stability improvements, ensuring smooth integration and future-proofing.\n\n\nEnhance Security: Protect your plugin with up-to-date security fixes from both Java 17 and Jenkins core improvements.\n\n\nAlign with the Community: Keep pace with ecosystem shifts towards Java 17, ensuring compatibility and expanding your plugin's user base.\n\n\nEnjoy a Better Developer Experience: Make the most of advanced tooling support and simplified dependency management with Java 17's enhancements.\n\n\nBy upgrading, you'll be positioning your plugin at the forefront of performance, security, and user satisfaction. We encourage you to explore these updates and provide feedback. Let's continue to build a robust Jenkins ecosystem together!",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 27,
    "title": "chore(pom): Require 2.462.3",
    "state": "OPEN",
    "createdAt": "2025-01-27T14:33:10Z",
    "updatedAt": "2025-01-27T14:33:10Z",
    "user": "gounthar",
    "repository": "jenkinsci/appspider-build-scanner-plugin",
    "pluginName": "jenkinsci-appspider-plugin",
    "labels": null,
    "url": "https://github.com/jenkinsci/appspider-build-scanner-plugin/pull/27",
    "description": "Hello jenkinsci-appspider-plugin developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version\n    io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version.\n\nWhy is this important?\nJenkins plugins declare a minimum supported Jenkins version.\nThe minimum Jenkins version is a useful way for plugin developers to indicate the range of Jenkins versions they are willing to support and test.\nSee the developer documentation to learn more about the recommended minimum Jenkins version.\nThe current minimum required Jenkins version is 2.462.3, which is why this pull request has been made.\nIf the plugin is already using the plugin bill of materials, then the bill of materials also needs to be updated with the matching artifactId for the minimum required Jenkins version.\nI can't see any change to the Jenkins version, how come?\nThis means your plugin POM was already using the 2.462.3 version but still required a few adjustments.\nThanks for taking the time to review this PR. üôè",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 20,
    "title": "chore(pom): Require 2.462.3",
    "state": "OPEN",
    "createdAt": "2025-01-27T13:26:22Z",
    "updatedAt": "2025-01-27T13:26:22Z",
    "user": "gounthar",
    "repository": "jenkinsci/mqtt-notification-plugin",
    "pluginName": "mqtt-notification-plugin",
    "labels": null,
    "url": "https://github.com/jenkinsci/mqtt-notification-plugin/pull/20",
    "description": "Hello mqtt-notification-plugin developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version\n    io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version.\n\nWhy is this important?\nJenkins plugins declare a minimum supported Jenkins version.\nThe minimum Jenkins version is a useful way for plugin developers to indicate the range of Jenkins versions they are willing to support and test.\nSee the developer documentation to learn more about the recommended minimum Jenkins version.\nThe current minimum required Jenkins version is 2.462.3, which is why this pull request has been made.\nIf the plugin is already using the plugin bill of materials, then the bill of materials also needs to be updated with the matching artifactId for the minimum required Jenkins version.\nI can't see any change to the Jenkins version, how come?\nThis means your plugin POM was already using the 2.462.3 version but still required a few adjustments.\nThanks for taking the time to review this PR. üôè",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 4,
    "title": "chore(pom): Require 2.462.3",
    "state": "MERGED",
    "createdAt": "2025-01-26T12:16:54Z",
    "updatedAt": "2025-02-05T03:34:26Z",
    "user": "jonesbusy",
    "repository": "jenkinsci/pipeline-input-notification-plugin",
    "pluginName": "pipeline-input-notification",
    "labels": null,
    "url": "https://github.com/jenkinsci/pipeline-input-notification-plugin/pull/4",
    "description": "Hello pipeline-input-notification developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version\n    io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version.\n\nWhy is this important?\nJenkins plugins declare a minimum supported Jenkins version.\nThe minimum Jenkins version is a useful way for plugin developers to indicate the range of Jenkins versions they are willing to support and test.\nSee the developer documentation to learn more about the recommended minimum Jenkins version.\nThe current minimum required Jenkins version is 2.462.3, which is why this pull request has been made.\nIf the plugin is already using the plugin bill of materials, then the bill of materials also needs to be updated with the matching artifactId for the minimum required Jenkins version.\nI can't see any change to the Jenkins version, how come?\nThis means your plugin POM was already using the 2.462.3 version but still required a few adjustments.\nThanks for taking the time to review this PR. üôè",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 114,
    "title": "Require 2.426.3",
    "state": "OPEN",
    "createdAt": "2025-01-26T12:10:28Z",
    "updatedAt": "2025-01-26T16:14:24Z",
    "user": "gounthar",
    "repository": "jenkinsci/spotinst-plugin",
    "pluginName": "spotinst",
    "labels": null,
    "url": "https://github.com/jenkinsci/spotinst-plugin/pull/114",
    "description": "Hello spotinst developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 4,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-26T12:03:31Z",
    "updatedAt": "2025-01-26T12:03:31Z",
    "user": "gounthar",
    "repository": "jenkinsci/srcclr-installer-plugin",
    "pluginName": "srcclr-installer",
    "labels": null,
    "url": "https://github.com/jenkinsci/srcclr-installer-plugin/pull/4",
    "description": "Hello srcclr-installer developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 7,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-26T11:53:55Z",
    "updatedAt": "2025-01-26T11:53:55Z",
    "user": "gounthar",
    "repository": "jenkinsci/stoplightio-report-plugin",
    "pluginName": "stoplightio-report",
    "labels": null,
    "url": "https://github.com/jenkinsci/stoplightio-report-plugin/pull/7",
    "description": "Hello stoplightio-report developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 56,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-26T10:47:26Z",
    "updatedAt": "2025-01-26T14:48:03Z",
    "user": "gounthar",
    "repository": "jenkinsci/vectorcast-execution-plugin",
    "pluginName": "vectorcast-execution",
    "labels": null,
    "url": "https://github.com/jenkinsci/vectorcast-execution-plugin/pull/56",
    "description": "Hello vectorcast-execution developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 3,
    "title": "chore(pom): Require 2.462.3",
    "state": "OPEN",
    "createdAt": "2025-01-25T21:52:31Z",
    "updatedAt": "2025-01-25T21:52:31Z",
    "user": "gounthar",
    "repository": "jenkinsci/partyparrotstatus-plugin",
    "pluginName": "partyparrotstatus",
    "labels": null,
    "url": "https://github.com/jenkinsci/partyparrotstatus-plugin/pull/3",
    "description": "Hello partyparrotstatus developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version\n    io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version.\n\nWhy is this important?\nJenkins plugins declare a minimum supported Jenkins version.\nThe minimum Jenkins version is a useful way for plugin developers to indicate the range of Jenkins versions they are willing to support and test.\nSee the developer documentation to learn more about the recommended minimum Jenkins version.\nThe current minimum required Jenkins version is 2.462.3, which is why this pull request has been made.\nIf the plugin is already using the plugin bill of materials, then the bill of materials also needs to be updated with the matching artifactId for the minimum required Jenkins version.\nI can't see any change to the Jenkins version, how come?\nThis means your plugin POM was already using the 2.462.3 version but still required a few adjustments.\nThanks for taking the time to review this PR. üôè",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 9,
    "title": "chore(pom): Require 2.462.3",
    "state": "OPEN",
    "createdAt": "2025-01-25T21:17:43Z",
    "updatedAt": "2025-01-25T21:17:43Z",
    "user": "gounthar",
    "repository": "jenkinsci/qmetry-test-management-plugin",
    "pluginName": "qmetry-test-management",
    "labels": null,
    "url": "https://github.com/jenkinsci/qmetry-test-management-plugin/pull/9",
    "description": "Hello qmetry-test-management developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version\n    io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version.\n\nWhy is this important?\nJenkins plugins declare a minimum supported Jenkins version.\nThe minimum Jenkins version is a useful way for plugin developers to indicate the range of Jenkins versions they are willing to support and test.\nSee the developer documentation to learn more about the recommended minimum Jenkins version.\nThe current minimum required Jenkins version is 2.462.3, which is why this pull request has been made.\nIf the plugin is already using the plugin bill of materials, then the bill of materials also needs to be updated with the matching artifactId for the minimum required Jenkins version.\nI can't see any change to the Jenkins version, how come?\nThis means your plugin POM was already using the 2.462.3 version but still required a few adjustments.\nThanks for taking the time to review this PR. üôè",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 12,
    "title": "chore(pom): Require 2.462.3",
    "state": "OPEN",
    "createdAt": "2025-01-25T21:14:32Z",
    "updatedAt": "2025-01-27T12:33:49Z",
    "user": "gounthar",
    "repository": "jenkinsci/qtest-plugin",
    "pluginName": "qtest",
    "labels": null,
    "url": "https://github.com/jenkinsci/qtest-plugin/pull/12",
    "description": "Hello qtest developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version\n    io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version.\n\nWhy is this important?\nJenkins plugins declare a minimum supported Jenkins version.\nThe minimum Jenkins version is a useful way for plugin developers to indicate the range of Jenkins versions they are willing to support and test.\nSee the developer documentation to learn more about the recommended minimum Jenkins version.\nThe current minimum required Jenkins version is 2.462.3, which is why this pull request has been made.\nIf the plugin is already using the plugin bill of materials, then the bill of materials also needs to be updated with the matching artifactId for the minimum required Jenkins version.\nI can't see any change to the Jenkins version, how come?\nThis means your plugin POM was already using the 2.462.3 version but still required a few adjustments.\nThanks for taking the time to review this PR. üôè",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 33,
    "title": "chore(pom): Require 2.462.3",
    "state": "OPEN",
    "createdAt": "2025-01-25T20:56:44Z",
    "updatedAt": "2025-01-25T20:56:44Z",
    "user": "gounthar",
    "repository": "jenkinsci/redgate-sql-ci-plugin",
    "pluginName": "redgate-sql-ci",
    "labels": null,
    "url": "https://github.com/jenkinsci/redgate-sql-ci-plugin/pull/33",
    "description": "Hello redgate-sql-ci developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version\n    io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version.\n\nWhy is this important?\nJenkins plugins declare a minimum supported Jenkins version.\nThe minimum Jenkins version is a useful way for plugin developers to indicate the range of Jenkins versions they are willing to support and test.\nSee the developer documentation to learn more about the recommended minimum Jenkins version.\nThe current minimum required Jenkins version is 2.462.3, which is why this pull request has been made.\nIf the plugin is already using the plugin bill of materials, then the bill of materials also needs to be updated with the matching artifactId for the minimum required Jenkins version.\nI can't see any change to the Jenkins version, how come?\nThis means your plugin POM was already using the 2.462.3 version but still required a few adjustments.\nThanks for taking the time to review this PR. üôè",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 6,
    "title": "chore(pom): Require 2.462.3",
    "state": "OPEN",
    "createdAt": "2025-01-25T20:45:02Z",
    "updatedAt": "2025-01-25T20:45:02Z",
    "user": "gounthar",
    "repository": "jenkinsci/runscope-plugin",
    "pluginName": "runscope",
    "labels": null,
    "url": "https://github.com/jenkinsci/runscope-plugin/pull/6",
    "description": "Hello runscope developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version\n    io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version.\n\nWhy is this important?\nJenkins plugins declare a minimum supported Jenkins version.\nThe minimum Jenkins version is a useful way for plugin developers to indicate the range of Jenkins versions they are willing to support and test.\nSee the developer documentation to learn more about the recommended minimum Jenkins version.\nThe current minimum required Jenkins version is 2.462.3, which is why this pull request has been made.\nIf the plugin is already using the plugin bill of materials, then the bill of materials also needs to be updated with the matching artifactId for the minimum required Jenkins version.\nI can't see any change to the Jenkins version, how come?\nThis means your plugin POM was already using the 2.462.3 version but still required a few adjustments.\nThanks for taking the time to review this PR. üôè",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 5,
    "title": "chore(pom): Require 2.462.3",
    "state": "OPEN",
    "createdAt": "2025-01-25T20:39:57Z",
    "updatedAt": "2025-01-27T12:10:01Z",
    "user": "gounthar",
    "repository": "jenkinsci/safe-batch-environment-filter-plugin",
    "pluginName": "safe-batch-environment-filter",
    "labels": null,
    "url": "https://github.com/jenkinsci/safe-batch-environment-filter-plugin/pull/5",
    "description": "Hello safe-batch-environment-filter developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version\n    io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version.\n\nWhy is this important?\nJenkins plugins declare a minimum supported Jenkins version.\nThe minimum Jenkins version is a useful way for plugin developers to indicate the range of Jenkins versions they are willing to support and test.\nSee the developer documentation to learn more about the recommended minimum Jenkins version.\nThe current minimum required Jenkins version is 2.462.3, which is why this pull request has been made.\nIf the plugin is already using the plugin bill of materials, then the bill of materials also needs to be updated with the matching artifactId for the minimum required Jenkins version.\nI can't see any change to the Jenkins version, how come?\nThis means your plugin POM was already using the 2.462.3 version but still required a few adjustments.\nThanks for taking the time to review this PR. üôè",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 2,
    "title": "chore(pom): Require 2.462.3",
    "state": "OPEN",
    "createdAt": "2025-01-25T20:16:14Z",
    "updatedAt": "2025-01-25T20:16:14Z",
    "user": "gounthar",
    "repository": "jenkinsci/sensedia-api-platform-plugin",
    "pluginName": "sensedia-api-platform",
    "labels": null,
    "url": "https://github.com/jenkinsci/sensedia-api-platform-plugin/pull/2",
    "description": "Hello sensedia-api-platform developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version\n    io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version.\n\nWhy is this important?\nJenkins plugins declare a minimum supported Jenkins version.\nThe minimum Jenkins version is a useful way for plugin developers to indicate the range of Jenkins versions they are willing to support and test.\nSee the developer documentation to learn more about the recommended minimum Jenkins version.\nThe current minimum required Jenkins version is 2.462.3, which is why this pull request has been made.\nIf the plugin is already using the plugin bill of materials, then the bill of materials also needs to be updated with the matching artifactId for the minimum required Jenkins version.\nI can't see any change to the Jenkins version, how come?\nThis means your plugin POM was already using the 2.462.3 version but still required a few adjustments.\nThanks for taking the time to review this PR. üôè",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 3,
    "title": "chore(pom): Require 2.462.3",
    "state": "MERGED",
    "createdAt": "2025-01-25T20:06:14Z",
    "updatedAt": "2025-02-01T17:07:18Z",
    "user": "gounthar",
    "repository": "jenkinsci/signal-killer",
    "pluginName": "signal-killer",
    "labels": null,
    "url": "https://github.com/jenkinsci/signal-killer/pull/3",
    "description": "Hello signal-killer developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version\n    io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version.\n\nWhy is this important?\nJenkins plugins declare a minimum supported Jenkins version.\nThe minimum Jenkins version is a useful way for plugin developers to indicate the range of Jenkins versions they are willing to support and test.\nSee the developer documentation to learn more about the recommended minimum Jenkins version.\nThe current minimum required Jenkins version is 2.462.3, which is why this pull request has been made.\nIf the plugin is already using the plugin bill of materials, then the bill of materials also needs to be updated with the matching artifactId for the minimum required Jenkins version.\nI can't see any change to the Jenkins version, how come?\nThis means your plugin POM was already using the 2.462.3 version but still required a few adjustments.\nThanks for taking the time to review this PR. üôè",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 22,
    "title": "chore(pom): Require 2.462.3",
    "state": "OPEN",
    "createdAt": "2025-01-25T19:58:51Z",
    "updatedAt": "2025-01-25T19:58:51Z",
    "user": "gounthar",
    "repository": "jenkinsci/sitemonitor-plugin",
    "pluginName": "sitemonitor",
    "labels": null,
    "url": "https://github.com/jenkinsci/sitemonitor-plugin/pull/22",
    "description": "Hello sitemonitor developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version\n    io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version.\n\nWhy is this important?\nJenkins plugins declare a minimum supported Jenkins version.\nThe minimum Jenkins version is a useful way for plugin developers to indicate the range of Jenkins versions they are willing to support and test.\nSee the developer documentation to learn more about the recommended minimum Jenkins version.\nThe current minimum required Jenkins version is 2.462.3, which is why this pull request has been made.\nIf the plugin is already using the plugin bill of materials, then the bill of materials also needs to be updated with the matching artifactId for the minimum required Jenkins version.\nI can't see any change to the Jenkins version, how come?\nThis means your plugin POM was already using the 2.462.3 version but still required a few adjustments.\nThanks for taking the time to review this PR. üôè",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 22,
    "title": "chore(pom): Require 2.462.3",
    "state": "OPEN",
    "createdAt": "2025-01-25T19:50:24Z",
    "updatedAt": "2025-01-27T11:38:14Z",
    "user": "gounthar",
    "repository": "jenkinsci/sonarqube-plugin",
    "pluginName": "sonar",
    "labels": null,
    "url": "https://github.com/jenkinsci/sonarqube-plugin/pull/22",
    "description": "Hello sonar developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version\n    io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version.\n\nWhy is this important?\nJenkins plugins declare a minimum supported Jenkins version.\nThe minimum Jenkins version is a useful way for plugin developers to indicate the range of Jenkins versions they are willing to support and test.\nSee the developer documentation to learn more about the recommended minimum Jenkins version.\nThe current minimum required Jenkins version is 2.462.3, which is why this pull request has been made.\nIf the plugin is already using the plugin bill of materials, then the bill of materials also needs to be updated with the matching artifactId for the minimum required Jenkins version.\nI can't see any change to the Jenkins version, how come?\nThis means your plugin POM was already using the 2.462.3 version but still required a few adjustments.\nThanks for taking the time to review this PR. üôè",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 10,
    "title": "chore(pom): Require 2.462.3",
    "state": "MERGED",
    "createdAt": "2025-01-25T19:40:33Z",
    "updatedAt": "2025-01-28T08:33:22Z",
    "user": "gounthar",
    "repository": "jenkinsci/sonargraph-integration-plugin",
    "pluginName": "sonargraph-integration",
    "labels": null,
    "url": "https://github.com/jenkinsci/sonargraph-integration-plugin/pull/10",
    "description": "Hello sonargraph-integration developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version\n    io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version.\n\nWhy is this important?\nJenkins plugins declare a minimum supported Jenkins version.\nThe minimum Jenkins version is a useful way for plugin developers to indicate the range of Jenkins versions they are willing to support and test.\nSee the developer documentation to learn more about the recommended minimum Jenkins version.\nThe current minimum required Jenkins version is 2.462.3, which is why this pull request has been made.\nIf the plugin is already using the plugin bill of materials, then the bill of materials also needs to be updated with the matching artifactId for the minimum required Jenkins version.\nI can't see any change to the Jenkins version, how come?\nThis means your plugin POM was already using the 2.462.3 version but still required a few adjustments.\nThanks for taking the time to review this PR. üôè",
    "checkStatus": "FAILURE"
  },
  {
    "number": 2,
    "title": "chore(pom): Require 2.462.3",
    "state": "OPEN",
    "createdAt": "2025-01-25T19:36:33Z",
    "updatedAt": "2025-01-25T19:36:33Z",
    "user": "gounthar",
    "repository": "jenkinsci/sonarqube-generic-coverage-plugin",
    "pluginName": "sonarqube-generic-coverage",
    "labels": null,
    "url": "https://github.com/jenkinsci/sonarqube-generic-coverage-plugin/pull/2",
    "description": "Hello sonarqube-generic-coverage developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version\n    io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version.\n\nWhy is this important?\nJenkins plugins declare a minimum supported Jenkins version.\nThe minimum Jenkins version is a useful way for plugin developers to indicate the range of Jenkins versions they are willing to support and test.\nSee the developer documentation to learn more about the recommended minimum Jenkins version.\nThe current minimum required Jenkins version is 2.462.3, which is why this pull request has been made.\nIf the plugin is already using the plugin bill of materials, then the bill of materials also needs to be updated with the matching artifactId for the minimum required Jenkins version.\nI can't see any change to the Jenkins version, how come?\nThis means your plugin POM was already using the 2.462.3 version but still required a few adjustments.\nThanks for taking the time to review this PR. üôè",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 113,
    "title": "chore(pom): Require 2.462.3",
    "state": "OPEN",
    "createdAt": "2025-01-25T19:30:34Z",
    "updatedAt": "2025-01-27T11:21:11Z",
    "user": "gounthar",
    "repository": "jenkinsci/spotinst-plugin",
    "pluginName": "spotinst",
    "labels": null,
    "url": "https://github.com/jenkinsci/spotinst-plugin/pull/113",
    "description": "Hello spotinst developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version\n    io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version.\n\nWhy is this important?\nJenkins plugins declare a minimum supported Jenkins version.\nThe minimum Jenkins version is a useful way for plugin developers to indicate the range of Jenkins versions they are willing to support and test.\nSee the developer documentation to learn more about the recommended minimum Jenkins version.\nThe current minimum required Jenkins version is 2.462.3, which is why this pull request has been made.\nIf the plugin is already using the plugin bill of materials, then the bill of materials also needs to be updated with the matching artifactId for the minimum required Jenkins version.\nI can't see any change to the Jenkins version, how come?\nThis means your plugin POM was already using the 2.462.3 version but still required a few adjustments.\nThanks for taking the time to review this PR. üôè",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 3,
    "title": "chore(pom): Require 2.462.3",
    "state": "OPEN",
    "createdAt": "2025-01-25T19:24:51Z",
    "updatedAt": "2025-01-25T19:24:51Z",
    "user": "gounthar",
    "repository": "jenkinsci/srcclr-installer-plugin",
    "pluginName": "srcclr-installer",
    "labels": null,
    "url": "https://github.com/jenkinsci/srcclr-installer-plugin/pull/3",
    "description": "Hello srcclr-installer developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version\n    io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version.\n\nWhy is this important?\nJenkins plugins declare a minimum supported Jenkins version.\nThe minimum Jenkins version is a useful way for plugin developers to indicate the range of Jenkins versions they are willing to support and test.\nSee the developer documentation to learn more about the recommended minimum Jenkins version.\nThe current minimum required Jenkins version is 2.462.3, which is why this pull request has been made.\nIf the plugin is already using the plugin bill of materials, then the bill of materials also needs to be updated with the matching artifactId for the minimum required Jenkins version.\nI can't see any change to the Jenkins version, how come?\nThis means your plugin POM was already using the 2.462.3 version but still required a few adjustments.\nThanks for taking the time to review this PR. üôè",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 6,
    "title": "chore(pom): Require 2.462.3",
    "state": "OPEN",
    "createdAt": "2025-01-25T19:17:25Z",
    "updatedAt": "2025-01-25T19:17:25Z",
    "user": "gounthar",
    "repository": "jenkinsci/stoplightio-report-plugin",
    "pluginName": "stoplightio-report",
    "labels": null,
    "url": "https://github.com/jenkinsci/stoplightio-report-plugin/pull/6",
    "description": "Hello stoplightio-report developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version\n    io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version.\n\nWhy is this important?\nJenkins plugins declare a minimum supported Jenkins version.\nThe minimum Jenkins version is a useful way for plugin developers to indicate the range of Jenkins versions they are willing to support and test.\nSee the developer documentation to learn more about the recommended minimum Jenkins version.\nThe current minimum required Jenkins version is 2.462.3, which is why this pull request has been made.\nIf the plugin is already using the plugin bill of materials, then the bill of materials also needs to be updated with the matching artifactId for the minimum required Jenkins version.\nI can't see any change to the Jenkins version, how come?\nThis means your plugin POM was already using the 2.462.3 version but still required a few adjustments.\nThanks for taking the time to review this PR. üôè",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 11,
    "title": "chore(pom): Require 2.462.3",
    "state": "OPEN",
    "createdAt": "2025-01-25T18:59:45Z",
    "updatedAt": "2025-01-27T10:57:36Z",
    "user": "gounthar",
    "repository": "jenkinsci/testingbot-plugin",
    "pluginName": "testingbot",
    "labels": null,
    "url": "https://github.com/jenkinsci/testingbot-plugin/pull/11",
    "description": "Hello testingbot developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version\n    io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version.\n\nWhy is this important?\nJenkins plugins declare a minimum supported Jenkins version.\nThe minimum Jenkins version is a useful way for plugin developers to indicate the range of Jenkins versions they are willing to support and test.\nSee the developer documentation to learn more about the recommended minimum Jenkins version.\nThe current minimum required Jenkins version is 2.462.3, which is why this pull request has been made.\nIf the plugin is already using the plugin bill of materials, then the bill of materials also needs to be updated with the matching artifactId for the minimum required Jenkins version.\nI can't see any change to the Jenkins version, how come?\nThis means your plugin POM was already using the 2.462.3 version but still required a few adjustments.\nThanks for taking the time to review this PR. üôè",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 14,
    "title": "chore(pom): Require 2.462.3",
    "state": "OPEN",
    "createdAt": "2025-01-25T18:55:49Z",
    "updatedAt": "2025-01-25T18:55:49Z",
    "user": "gounthar",
    "repository": "jenkinsci/testodyssey-execution-plugin",
    "pluginName": "testodyssey-execution",
    "labels": null,
    "url": "https://github.com/jenkinsci/testodyssey-execution-plugin/pull/14",
    "description": "Hello testodyssey-execution developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version\n    io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version.\n\nWhy is this important?\nJenkins plugins declare a minimum supported Jenkins version.\nThe minimum Jenkins version is a useful way for plugin developers to indicate the range of Jenkins versions they are willing to support and test.\nSee the developer documentation to learn more about the recommended minimum Jenkins version.\nThe current minimum required Jenkins version is 2.462.3, which is why this pull request has been made.\nIf the plugin is already using the plugin bill of materials, then the bill of materials also needs to be updated with the matching artifactId for the minimum required Jenkins version.\nI can't see any change to the Jenkins version, how come?\nThis means your plugin POM was already using the 2.462.3 version but still required a few adjustments.\nThanks for taking the time to review this PR. üôè",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 7,
    "title": "chore(pom): Require 2.462.3",
    "state": "OPEN",
    "createdAt": "2025-01-25T18:51:24Z",
    "updatedAt": "2025-01-25T18:51:24Z",
    "user": "gounthar",
    "repository": "jenkinsci/testquality-updater-plugin",
    "pluginName": "testquality-updater",
    "labels": null,
    "url": "https://github.com/jenkinsci/testquality-updater-plugin/pull/7",
    "description": "Hello testquality-updater developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version\n    io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version.\n\nWhy is this important?\nJenkins plugins declare a minimum supported Jenkins version.\nThe minimum Jenkins version is a useful way for plugin developers to indicate the range of Jenkins versions they are willing to support and test.\nSee the developer documentation to learn more about the recommended minimum Jenkins version.\nThe current minimum required Jenkins version is 2.462.3, which is why this pull request has been made.\nIf the plugin is already using the plugin bill of materials, then the bill of materials also needs to be updated with the matching artifactId for the minimum required Jenkins version.\nI can't see any change to the Jenkins version, how come?\nThis means your plugin POM was already using the 2.462.3 version but still required a few adjustments.\nThanks for taking the time to review this PR. üôè",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 9,
    "title": "chore(pom): Require 2.462.3",
    "state": "OPEN",
    "createdAt": "2025-01-25T18:47:40Z",
    "updatedAt": "2025-01-27T10:50:00Z",
    "user": "gounthar",
    "repository": "jenkinsci/testsigma-plugin",
    "pluginName": "testsigma",
    "labels": null,
    "url": "https://github.com/jenkinsci/testsigma-plugin/pull/9",
    "description": "Hello testsigma developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version\n    io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version.\n\nWhy is this important?\nJenkins plugins declare a minimum supported Jenkins version.\nThe minimum Jenkins version is a useful way for plugin developers to indicate the range of Jenkins versions they are willing to support and test.\nSee the developer documentation to learn more about the recommended minimum Jenkins version.\nThe current minimum required Jenkins version is 2.462.3, which is why this pull request has been made.\nIf the plugin is already using the plugin bill of materials, then the bill of materials also needs to be updated with the matching artifactId for the minimum required Jenkins version.\nI can't see any change to the Jenkins version, how come?\nThis means your plugin POM was already using the 2.462.3 version but still required a few adjustments.\nThanks for taking the time to review this PR. üôè",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 29,
    "title": "chore(pom): Require 2.462.3",
    "state": "OPEN",
    "createdAt": "2025-01-25T18:28:25Z",
    "updatedAt": "2025-01-27T10:34:24Z",
    "user": "gounthar",
    "repository": "jenkinsci/unity3d-plugin",
    "pluginName": "unity3d-plugin",
    "labels": null,
    "url": "https://github.com/jenkinsci/unity3d-plugin/pull/29",
    "description": "Hello unity3d-plugin developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version\n    io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version.\n\nWhy is this important?\nJenkins plugins declare a minimum supported Jenkins version.\nThe minimum Jenkins version is a useful way for plugin developers to indicate the range of Jenkins versions they are willing to support and test.\nSee the developer documentation to learn more about the recommended minimum Jenkins version.\nThe current minimum required Jenkins version is 2.462.3, which is why this pull request has been made.\nIf the plugin is already using the plugin bill of materials, then the bill of materials also needs to be updated with the matching artifactId for the minimum required Jenkins version.\nI can't see any change to the Jenkins version, how come?\nThis means your plugin POM was already using the 2.462.3 version but still required a few adjustments.\nThanks for taking the time to review this PR. üôè",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 15,
    "title": "chore(pom): Require 2.462.3",
    "state": "OPEN",
    "createdAt": "2025-01-25T18:23:24Z",
    "updatedAt": "2025-01-25T18:23:24Z",
    "user": "gounthar",
    "repository": "jenkinsci/vagrant-plugin",
    "pluginName": "vagrant",
    "labels": null,
    "url": "https://github.com/jenkinsci/vagrant-plugin/pull/15",
    "description": "Hello vagrant developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version\n    io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version.\n\nWhy is this important?\nJenkins plugins declare a minimum supported Jenkins version.\nThe minimum Jenkins version is a useful way for plugin developers to indicate the range of Jenkins versions they are willing to support and test.\nSee the developer documentation to learn more about the recommended minimum Jenkins version.\nThe current minimum required Jenkins version is 2.462.3, which is why this pull request has been made.\nIf the plugin is already using the plugin bill of materials, then the bill of materials also needs to be updated with the matching artifactId for the minimum required Jenkins version.\nI can't see any change to the Jenkins version, how come?\nThis means your plugin POM was already using the 2.462.3 version but still required a few adjustments.\nThanks for taking the time to review this PR. üôè",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 20,
    "title": "chore(pom): Require 2.462.3",
    "state": "OPEN",
    "createdAt": "2025-01-25T18:11:19Z",
    "updatedAt": "2025-01-27T10:21:38Z",
    "user": "gounthar",
    "repository": "jenkinsci/vectorcast-coverage-plugin",
    "pluginName": "vectorcast-coverage",
    "labels": null,
    "url": "https://github.com/jenkinsci/vectorcast-coverage-plugin/pull/20",
    "description": "Hello vectorcast-coverage developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version\n    io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version.\n\nWhy is this important?\nJenkins plugins declare a minimum supported Jenkins version.\nThe minimum Jenkins version is a useful way for plugin developers to indicate the range of Jenkins versions they are willing to support and test.\nSee the developer documentation to learn more about the recommended minimum Jenkins version.\nThe current minimum required Jenkins version is 2.462.3, which is why this pull request has been made.\nIf the plugin is already using the plugin bill of materials, then the bill of materials also needs to be updated with the matching artifactId for the minimum required Jenkins version.\nI can't see any change to the Jenkins version, how come?\nThis means your plugin POM was already using the 2.462.3 version but still required a few adjustments.\nThanks for taking the time to review this PR. üôè",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 7,
    "title": "chore(pom): Require 2.462.3",
    "state": "OPEN",
    "createdAt": "2025-01-25T17:57:05Z",
    "updatedAt": "2025-01-27T10:10:43Z",
    "user": "gounthar",
    "repository": "jenkinsci/visualworks-store-plugin",
    "pluginName": "visualworks-store",
    "labels": null,
    "url": "https://github.com/jenkinsci/visualworks-store-plugin/pull/7",
    "description": "Hello visualworks-store developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version\n    io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version.\n\nWhy is this important?\nJenkins plugins declare a minimum supported Jenkins version.\nThe minimum Jenkins version is a useful way for plugin developers to indicate the range of Jenkins versions they are willing to support and test.\nSee the developer documentation to learn more about the recommended minimum Jenkins version.\nThe current minimum required Jenkins version is 2.462.3, which is why this pull request has been made.\nIf the plugin is already using the plugin bill of materials, then the bill of materials also needs to be updated with the matching artifactId for the minimum required Jenkins version.\nThe checks are failing\nYour current Jenkinsfile is targeting JDK8 and JDK11. This PR will only work with JDK11+.\nWe supplied a modified Jenkinsfile with the other changes, but it won't be used until you replay the checks with it.\nThanks for taking the time to review this PR. üôè",
    "checkStatus": "FAILURE"
  },
  {
    "number": 13,
    "title": "chore(pom): Require 2.462.3",
    "state": "MERGED",
    "createdAt": "2025-01-25T17:53:08Z",
    "updatedAt": "2025-01-29T14:10:52Z",
    "user": "gounthar",
    "repository": "jenkinsci/vmanager-plugin",
    "pluginName": "vmanager-plugin",
    "labels": null,
    "url": "https://github.com/jenkinsci/vmanager-plugin/pull/13",
    "description": "Hello vmanager-plugin developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version\n    io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version.\n\nWhy is this important?\nJenkins plugins declare a minimum supported Jenkins version.\nThe minimum Jenkins version is a useful way for plugin developers to indicate the range of Jenkins versions they are willing to support and test.\nSee the developer documentation to learn more about the recommended minimum Jenkins version.\nThe current minimum required Jenkins version is 2.462.3, which is why this pull request has been made.\nIf the plugin is already using the plugin bill of materials, then the bill of materials also needs to be updated with the matching artifactId for the minimum required Jenkins version.\nI can't see any change to the Jenkins version, how come?\nThis means your plugin POM was already using the 2.462.3 version but still required a few adjustments.\nThanks for taking the time to review this PR. üôè",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 8,
    "title": "chore(pom): Require 2.462.3",
    "state": "OPEN",
    "createdAt": "2025-01-25T17:39:08Z",
    "updatedAt": "2025-01-27T10:00:05Z",
    "user": "gounthar",
    "repository": "jenkinsci/vncviewer-plugin",
    "pluginName": "vncviewer",
    "labels": null,
    "url": "https://github.com/jenkinsci/vncviewer-plugin/pull/8",
    "description": "Hello vncviewer developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version\n    io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version.\n\nWhy is this important?\nJenkins plugins declare a minimum supported Jenkins version.\nThe minimum Jenkins version is a useful way for plugin developers to indicate the range of Jenkins versions they are willing to support and test.\nSee the developer documentation to learn more about the recommended minimum Jenkins version.\nThe current minimum required Jenkins version is 2.462.3, which is why this pull request has been made.\nIf the plugin is already using the plugin bill of materials, then the bill of materials also needs to be updated with the matching artifactId for the minimum required Jenkins version.\nI can't see any change to the Jenkins version, how come?\nThis means your plugin POM was already using the 2.462.3 version but still required a few adjustments.\nThanks for taking the time to review this PR. üôè",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 2,
    "title": "chore(pom): Require 2.462.3",
    "state": "OPEN",
    "createdAt": "2025-01-25T17:31:03Z",
    "updatedAt": "2025-01-25T17:31:03Z",
    "user": "gounthar",
    "repository": "jenkinsci/webhook-eventsource-plugin",
    "pluginName": "webhook-eventsource",
    "labels": null,
    "url": "https://github.com/jenkinsci/webhook-eventsource-plugin/pull/2",
    "description": "Hello webhook-eventsource developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version\n    io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version.\n\nWhy is this important?\nJenkins plugins declare a minimum supported Jenkins version.\nThe minimum Jenkins version is a useful way for plugin developers to indicate the range of Jenkins versions they are willing to support and test.\nSee the developer documentation to learn more about the recommended minimum Jenkins version.\nThe current minimum required Jenkins version is 2.462.3, which is why this pull request has been made.\nIf the plugin is already using the plugin bill of materials, then the bill of materials also needs to be updated with the matching artifactId for the minimum required Jenkins version.\nI can't see any change to the Jenkins version, how come?\nThis means your plugin POM was already using the 2.462.3 version but still required a few adjustments.\nThanks for taking the time to review this PR. üôè",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 2,
    "title": "chore(pom): Require 2.462.3",
    "state": "OPEN",
    "createdAt": "2025-01-25T17:27:21Z",
    "updatedAt": "2025-01-25T17:27:21Z",
    "user": "gounthar",
    "repository": "jenkinsci/webload-plugin",
    "pluginName": "webload",
    "labels": null,
    "url": "https://github.com/jenkinsci/webload-plugin/pull/2",
    "description": "Hello webload developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version\n    io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version.\n\nWhy is this important?\nJenkins plugins declare a minimum supported Jenkins version.\nThe minimum Jenkins version is a useful way for plugin developers to indicate the range of Jenkins versions they are willing to support and test.\nSee the developer documentation to learn more about the recommended minimum Jenkins version.\nThe current minimum required Jenkins version is 2.462.3, which is why this pull request has been made.\nIf the plugin is already using the plugin bill of materials, then the bill of materials also needs to be updated with the matching artifactId for the minimum required Jenkins version.\nI can't see any change to the Jenkins version, how come?\nThis means your plugin POM was already using the 2.462.3 version but still required a few adjustments.\nThanks for taking the time to review this PR. üôè",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 6,
    "title": "chore(dependencies): Automate dependency updates with Dependabot",
    "state": "MERGED",
    "createdAt": "2025-01-25T14:45:51Z",
    "updatedAt": "2025-01-27T17:42:43Z",
    "user": "gounthar",
    "repository": "jenkinsci/send-stacktrace-to-eclipse-plugin",
    "pluginName": "send-stacktrace-to-eclipse-plugin",
    "labels": null,
    "url": "https://github.com/jenkinsci/send-stacktrace-to-eclipse-plugin/pull/6",
    "description": "Hello send-stacktrace-to-eclipse-plugin developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Setup dependabot\n    io.jenkins.tools.pluginmodernizer.SetupDependabot\n    Setup dependabot for the Jenkins plugin if it doesn't exist.\n\nWhy Automate with Dependabot?\nManaging dependencies can be a time-consuming and challenging task, especially when maintaining a Jenkins plugin.\nBy automating this process with Dependabot, you gain numerous advantages:\n\n\nKeep Pace with Innovation: Dependabot ensures\nyour plugin remains cutting-edge by promptly incorporating the latest features and enhancements from upstream libraries.\n\n\nStrengthen Security: Staying up-to-date with dependency updates is crucial for security.\nDependabot automatically flags and updates any vulnerable dependencies,\nhelping to protect your plugin from potential exploits.\n\n\nSave Time and Effort: Spend less time managing dependencies and more time innovating.\nDependabot automatically submits pull requests for new releases,\nallowing you to effortlessly review and integrate updates.\n\n\nEnhance Compatibility and Stability: Regular updates improve both performance and compatibility with other plugins and the Jenkins core,\nensuring a seamless experience for your users.\n\n\nImprove GitHub Integration: Dependabot streamlines and enhances the integration process with GitHub,\nmaking it easier to manage updates.\n\n\nEnhance the plugin health score: Regular updates contribute to a better health score by ensuring your plugin is reliable and up-to-date.\n\n\nFocus on What Matters: With Dependabot, you can concentrate on developing new features and fixing bugs, knowing that it handles dependency updates efficiently.\n\n\nSetting up Dependabot exemplifies a proactive approach to modern software maintenance, aligning your plugin with best practices in the industry. We invite you to test these updates and adopt a maintenance workflow that is both efficient and secure.\nYour insights and feedback are invaluable to us, and we are here to support you through this transition as needed.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 5,
    "title": "chore(github): Add CODEOWNERS",
    "state": "MERGED",
    "createdAt": "2025-01-25T14:42:26Z",
    "updatedAt": "2025-01-27T17:40:50Z",
    "user": "gounthar",
    "repository": "jenkinsci/send-stacktrace-to-eclipse-plugin",
    "pluginName": "send-stacktrace-to-eclipse-plugin",
    "labels": null,
    "url": "https://github.com/jenkinsci/send-stacktrace-to-eclipse-plugin/pull/5",
    "description": "Hello send-stacktrace-to-eclipse-plugin developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Add CODEOWNERS file\n    io.jenkins.tools.pluginmodernizer.AddCodeOwner\n    Adds a CODEOWNERS file to a Jenkins plugin.\n\nWhy is this important?\nTo improve GitHub integration and enhance the plugin health score.\nTesting Done\nNone. We rely on GitHub checks of the pull request.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 4,
    "title": "chore(pom): Require 2.462.3",
    "state": "MERGED",
    "createdAt": "2025-01-25T14:37:02Z",
    "updatedAt": "2025-01-27T17:34:41Z",
    "user": "gounthar",
    "repository": "jenkinsci/send-stacktrace-to-eclipse-plugin",
    "pluginName": "send-stacktrace-to-eclipse-plugin",
    "labels": null,
    "url": "https://github.com/jenkinsci/send-stacktrace-to-eclipse-plugin/pull/4",
    "description": "Hello send-stacktrace-to-eclipse-plugin developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version\n    io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version.\n\nWhy is this important?\nJenkins plugins declare a minimum supported Jenkins version.\nThe minimum Jenkins version is a useful way for plugin developers to indicate the range of Jenkins versions they are willing to support and test.\nSee the developer documentation to learn more about the recommended minimum Jenkins version.\nThe current minimum required Jenkins version is 2.462.3, which is why this pull request has been made.\nIf the plugin is already using the plugin bill of materials, then the bill of materials also needs to be updated with the matching artifactId for the minimum required Jenkins version.\nI can't see any change to the Jenkins version, how come?\nThis means your plugin POM was already using the 2.462.3 version but still required a few adjustments.\nThanks for taking the time to review this PR. üôè",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 4,
    "title": "Require 2.346.3",
    "state": "MERGED",
    "createdAt": "2025-01-25T08:55:37Z",
    "updatedAt": "2025-02-08T15:08:06Z",
    "user": "jonesbusy",
    "repository": "jenkinsci/jsoup-plugin",
    "pluginName": "jsoup",
    "labels": [
      "dependencies"
    ],
    "url": "https://github.com/jenkinsci/jsoup-plugin/pull/4",
    "description": "Hello jsoup developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 3,
    "title": "feat(ci): Builds on the Jenkins Infrastructure",
    "state": "MERGED",
    "createdAt": "2025-01-25T08:52:23Z",
    "updatedAt": "2025-01-25T11:07:35Z",
    "user": "jonesbusy",
    "repository": "jenkinsci/send-stacktrace-to-eclipse-plugin",
    "pluginName": "send-stacktrace-to-eclipse-plugin",
    "labels": null,
    "url": "https://github.com/jenkinsci/send-stacktrace-to-eclipse-plugin/pull/3",
    "description": "Hello send-stacktrace-to-eclipse-plugin developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Setup the Jenkinsfile\n    io.jenkins.tools.pluginmodernizer.SetupJenkinsfile\n    Add a missing Jenkinsfile to the Jenkins plugin.\n\nWhy is this important?\nThis pull request ensure your plugin is build on the Jenkins infrastructure.\nBased on your plugin requirements, the Jenkins infrastructure will build your plugin using Java 11 and 17.\nThere will come a time when we no longer support plugins built with JDK 8 or 11.\nAfter this PR is merged, we will submit additional automated PRs to enable your plugin to build with Java 17 and 21.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 8,
    "title": "Applied recipe FixJellyIssues",
    "state": "OPEN",
    "createdAt": "2025-01-24T10:27:29Z",
    "updatedAt": "2025-01-24T10:36:05Z",
    "user": "gounthar",
    "repository": "jenkinsci/report-info-plugin",
    "pluginName": "report-info",
    "labels": null,
    "url": "https://github.com/jenkinsci/report-info-plugin/pull/8",
    "description": "Hello report-info developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Add XML declaration to Jelly files and create index.jelly if it doesn't exist\n    io.jenkins.tools.pluginmodernizer.FixJellyIssues\n    Ensure the XML declaration `\u003c?jelly escape-by-default='true'?\u003e` is present in all `.jelly` files and create index.jelly if it doesn't exist.\n\nTesting\nThe checks should go green after #5 is merged.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 7,
    "title": "chore(dependencies): Automate dependency updates with Dependabot",
    "state": "OPEN",
    "createdAt": "2025-01-24T10:06:36Z",
    "updatedAt": "2025-01-24T10:15:09Z",
    "user": "gounthar",
    "repository": "jenkinsci/report-info-plugin",
    "pluginName": "report-info",
    "labels": null,
    "url": "https://github.com/jenkinsci/report-info-plugin/pull/7",
    "description": "Hello report-info developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Setup dependabot\n    io.jenkins.tools.pluginmodernizer.SetupDependabot\n    Setup dependabot for the Jenkins plugin if it doesn't exist.\n\nTesting\nThe checks should go green after #5 is merged.\nWhy Automate with Dependabot?\nManaging dependencies can be a time-consuming and challenging task, especially when maintaining a Jenkins plugin. By automating this process with Dependabot, you open the door to a host of advantages:\n\n\nKeep Pace with Innovation: Dependabot ensures your plugin stays at the cutting edge by promptly updating it with the latest features and improvements from upstream libraries.\n\n\nStrengthen Security: Staying current with dependency updates is critical for security. Dependabot automatically flags and updates any vulnerable dependencies, helping to shield your plugin from potential exploits.\n\n\nSave Time and Effort: Spend less time managing dependencies and more time innovating. Dependabot automatically submits pull requests for new releases, allowing you to effortlessly review and integrate updates.\n\n\nEnhance Compatibility and Stability: Regular updates enhance both performance and compatibility with other plugins and the Jenkins core, ensuring a smooth experience for your users.\n\n\nFocus on What Matters: With Dependabot, you can concentrate on developing new features and fixing bugs, while it takes care of keeping everything up-to-date under the hood.\n\n\nSetting up Dependabot exemplifies a proactive approach to modern software maintenance, aligning your plugin with the best practices in the industry. We invite you to test these updates and embrace a maintenance workflow that is efficient and secure.\nYour insights and feedback are invaluable to us, and we'll be here to support you through this transition as needed.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 6,
    "title": "chore(github): Add CODEOWNERS",
    "state": "OPEN",
    "createdAt": "2025-01-24T10:00:24Z",
    "updatedAt": "2025-01-24T10:05:42Z",
    "user": "gounthar",
    "repository": "jenkinsci/report-info-plugin",
    "pluginName": "report-info",
    "labels": null,
    "url": "https://github.com/jenkinsci/report-info-plugin/pull/6",
    "description": "Hello report-info developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Add CODEOWNERS file\n    io.jenkins.tools.pluginmodernizer.AddCodeOwner\n    Adds a CODEOWNERS file to a Jenkins plugin.\n\nWhy is this important?\nTo improve GitHub integration and enhance the plugin health score.\nTesting Done\nThe checks should go green after #5 is merged.",
    "checkStatus": "FAILURE"
  },
  {
    "number": 5,
    "title": "chore(pom): Require 2.462.3",
    "state": "OPEN",
    "createdAt": "2025-01-24T09:49:41Z",
    "updatedAt": "2025-01-27T12:17:47Z",
    "user": "gounthar",
    "repository": "jenkinsci/report-info-plugin",
    "pluginName": "report-info",
    "labels": null,
    "url": "https://github.com/jenkinsci/report-info-plugin/pull/5",
    "description": "Hello report-info developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version\n    io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion\n    Upgrade to the latest recommended core version and ensure the BOM matches the core version.\n\nWhy is this important?\nJenkins plugins declare a minimum supported Jenkins version.\nThe minimum Jenkins version is a useful way for plugin developers to indicate the range of Jenkins versions they are willing to support and test.\nSee the developer documentation to learn more about the recommended minimum Jenkins version.\nThe current minimum required Jenkins version is 2.462.3, which is why this pull request has been made.\nIf the plugin is already using the plugin bill of materials, then the bill of materials also needs to be updated with the matching artifactId for the minimum required Jenkins version.\nThanks for taking the time to review this PR. üôè",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 4,
    "title": "chore(github): Add CODEOWNERS",
    "state": "OPEN",
    "createdAt": "2025-01-23T19:14:00Z",
    "updatedAt": "2025-01-23T19:14:00Z",
    "user": "gounthar",
    "repository": "jenkinsci/wavefront-plugin",
    "pluginName": "wavefront",
    "labels": null,
    "url": "https://github.com/jenkinsci/wavefront-plugin/pull/4",
    "description": "Hello wavefront developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Add CODEOWNERS file\n    io.jenkins.tools.pluginmodernizer.AddCodeOwner\n    Adds a CODEOWNERS file to a Jenkins plugin.\n\nWhy is this important?\nTo improve GitHub integration and enhance the plugin health score.\nTesting Done\nNone. We rely on GitHub checks of the pull request.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 6,
    "title": "chore(github): Add CODEOWNERS",
    "state": "OPEN",
    "createdAt": "2025-01-23T13:22:52Z",
    "updatedAt": "2025-01-26T18:06:04Z",
    "user": "gounthar",
    "repository": "jenkinsci/environment-filter-utils-plugin",
    "pluginName": "environment-filter-utils",
    "labels": null,
    "url": "https://github.com/jenkinsci/environment-filter-utils-plugin/pull/6",
    "description": "Hello environment-filter-utils developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Add CODEOWNERS file\n    io.jenkins.tools.pluginmodernizer.AddCodeOwner\n    Adds a CODEOWNERS file to a Jenkins plugin.\n\nWhy is this important?\nTo improve GitHub integration and enhance the plugin health score.\nTesting Done\nNone. We rely on GitHub checks of the pull request.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 12,
    "title": "chore(github): Add CODEOWNERS",
    "state": "MERGED",
    "createdAt": "2025-01-23T09:32:10Z",
    "updatedAt": "2025-01-23T15:40:41Z",
    "user": "gounthar",
    "repository": "jenkinsci/appdynamics-plugin",
    "pluginName": "appdynamics-dashboard",
    "labels": null,
    "url": "https://github.com/jenkinsci/appdynamics-plugin/pull/12",
    "description": "Hello appdynamics-dashboard developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Add CODEOWNERS file\n    io.jenkins.tools.pluginmodernizer.AddCodeOwner\n    Adds a CODEOWNERS file to a Jenkins plugin.\n\nWhy is this important?\nTo improve GitHub integration and enhance the plugin health score.\nTesting Done\nNone. We rely on GitHub checks of the pull request.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 11,
    "title": "chore(dependencies): Automate dependency updates with Dependabot",
    "state": "MERGED",
    "createdAt": "2025-01-23T09:27:52Z",
    "updatedAt": "2025-01-23T14:53:21Z",
    "user": "gounthar",
    "repository": "jenkinsci/appdynamics-plugin",
    "pluginName": "appdynamics-dashboard",
    "labels": null,
    "url": "https://github.com/jenkinsci/appdynamics-plugin/pull/11",
    "description": "Hello appdynamics-dashboard developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Setup dependabot\n    io.jenkins.tools.pluginmodernizer.SetupDependabot\n    Setup dependabot for the Jenkins plugin if it doesn't exist.\n\nWhy Automate with Dependabot?\nManaging dependencies can be a time-consuming and challenging task, especially when maintaining a Jenkins plugin. By automating this process with Dependabot, you open the door to a host of advantages:\n\n\nKeep Pace with Innovation: Dependabot ensures your plugin stays at the cutting edge by promptly updating it with the latest features and improvements from upstream libraries.\n\n\nStrengthen Security: Staying current with dependency updates is critical for security. Dependabot automatically flags and updates any vulnerable dependencies, helping to shield your plugin from potential exploits.\n\n\nSave Time and Effort: Spend less time managing dependencies and more time innovating. Dependabot automatically submits pull requests for new releases, allowing you to effortlessly review and integrate updates.\n\n\nEnhance Compatibility and Stability: Regular updates enhance both performance and compatibility with other plugins and the Jenkins core, ensuring a smooth experience for your users.\n\n\nFocus on What Matters: With Dependabot, you can concentrate on developing new features and fixing bugs, while it takes care of keeping everything up-to-date under the hood.\n\n\nSetting up Dependabot exemplifies a proactive approach to modern software maintenance, aligning your plugin with the best practices in the industry. We invite you to test these updates and embrace a maintenance workflow that is efficient and secure.\nYour insights and feedback are invaluable to us, and we'll be here to support you through this transition as needed.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 10,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-22T22:17:51Z",
    "updatedAt": "2025-01-26T15:28:02Z",
    "user": "gounthar",
    "repository": "jenkinsci/testingbot-plugin",
    "pluginName": "testingbot",
    "labels": null,
    "url": "https://github.com/jenkinsci/testingbot-plugin/pull/10",
    "description": "Hello testingbot developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 13,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-22T22:15:02Z",
    "updatedAt": "2025-01-26T11:31:42Z",
    "user": "gounthar",
    "repository": "jenkinsci/testodyssey-execution-plugin",
    "pluginName": "testodyssey-execution",
    "labels": null,
    "url": "https://github.com/jenkinsci/testodyssey-execution-plugin/pull/13",
    "description": "Hello testodyssey-execution developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 6,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-22T22:11:53Z",
    "updatedAt": "2025-01-26T11:27:20Z",
    "user": "gounthar",
    "repository": "jenkinsci/testquality-updater-plugin",
    "pluginName": "testquality-updater",
    "labels": null,
    "url": "https://github.com/jenkinsci/testquality-updater-plugin/pull/6",
    "description": "Hello testquality-updater developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 8,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-22T22:08:22Z",
    "updatedAt": "2025-01-26T15:19:58Z",
    "user": "gounthar",
    "repository": "jenkinsci/testsigma-plugin",
    "pluginName": "testsigma",
    "labels": null,
    "url": "https://github.com/jenkinsci/testsigma-plugin/pull/8",
    "description": "Hello testsigma developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 28,
    "title": "Require 2.426",
    "state": "OPEN",
    "createdAt": "2025-01-22T21:54:11Z",
    "updatedAt": "2025-01-26T15:03:52Z",
    "user": "gounthar",
    "repository": "jenkinsci/unity3d-plugin",
    "pluginName": "unity3d-plugin",
    "labels": null,
    "url": "https://github.com/jenkinsci/unity3d-plugin/pull/28",
    "description": "Hello unity3d-plugin developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 14,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-22T21:50:13Z",
    "updatedAt": "2025-01-26T11:00:24Z",
    "user": "gounthar",
    "repository": "jenkinsci/vagrant-plugin",
    "pluginName": "vagrant",
    "labels": null,
    "url": "https://github.com/jenkinsci/vagrant-plugin/pull/14",
    "description": "Hello vagrant developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 55,
    "title": "Require 2.346.3",
    "state": "CLOSED",
    "createdAt": "2025-01-22T21:39:14Z",
    "updatedAt": "2025-01-24T14:45:15Z",
    "user": "gounthar",
    "repository": "jenkinsci/vectorcast-execution-plugin",
    "pluginName": "vectorcast-execution",
    "labels": null,
    "url": "https://github.com/jenkinsci/vectorcast-execution-plugin/pull/55",
    "description": "Hello vectorcast-execution developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 15,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-22T21:34:32Z",
    "updatedAt": "2025-01-26T10:43:07Z",
    "user": "gounthar",
    "repository": "jenkinsci/view26-plugin",
    "pluginName": "view26",
    "labels": null,
    "url": "https://github.com/jenkinsci/view26-plugin/pull/15",
    "description": "Hello view26 developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 6,
    "title": "Require 2.346.3",
    "state": "MERGED",
    "createdAt": "2025-01-22T21:27:58Z",
    "updatedAt": "2025-01-25T23:08:47Z",
    "user": "gounthar",
    "repository": "jenkinsci/visualworks-store-plugin",
    "pluginName": "visualworks-store",
    "labels": null,
    "url": "https://github.com/jenkinsci/visualworks-store-plugin/pull/6",
    "description": "Hello visualworks-store developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 12,
    "title": "Require 2.346.3",
    "state": "MERGED",
    "createdAt": "2025-01-22T21:24:22Z",
    "updatedAt": "2025-01-29T14:10:51Z",
    "user": "gounthar",
    "repository": "jenkinsci/vmanager-plugin",
    "pluginName": "vmanager-plugin",
    "labels": null,
    "url": "https://github.com/jenkinsci/vmanager-plugin/pull/12",
    "description": "Hello vmanager-plugin developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 7,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-22T21:13:00Z",
    "updatedAt": "2025-01-26T14:24:30Z",
    "user": "gounthar",
    "repository": "jenkinsci/vncviewer-plugin",
    "pluginName": "vncviewer",
    "labels": null,
    "url": "https://github.com/jenkinsci/vncviewer-plugin/pull/7",
    "description": "Hello vncviewer developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 3,
    "title": "Require 2.361.4",
    "state": "OPEN",
    "createdAt": "2025-01-22T21:08:47Z",
    "updatedAt": "2025-01-26T14:19:40Z",
    "user": "gounthar",
    "repository": "jenkinsci/wavefront-plugin",
    "pluginName": "wavefront",
    "labels": null,
    "url": "https://github.com/jenkinsci/wavefront-plugin/pull/3",
    "description": "Hello wavefront developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 1,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-22T21:05:49Z",
    "updatedAt": "2025-01-26T10:12:19Z",
    "user": "gounthar",
    "repository": "jenkinsci/webhook-eventsource-plugin",
    "pluginName": "webhook-eventsource",
    "labels": null,
    "url": "https://github.com/jenkinsci/webhook-eventsource-plugin/pull/1",
    "description": "Hello webhook-eventsource developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 1,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-22T21:01:44Z",
    "updatedAt": "2025-01-26T10:08:26Z",
    "user": "gounthar",
    "repository": "jenkinsci/webload-plugin",
    "pluginName": "webload",
    "labels": null,
    "url": "https://github.com/jenkinsci/webload-plugin/pull/1",
    "description": "Hello webload developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 10,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-22T20:46:34Z",
    "updatedAt": "2025-01-26T09:51:42Z",
    "user": "gounthar",
    "repository": "jenkinsci/wso2id-oauth-plugin",
    "pluginName": "wso2id-oauth",
    "labels": null,
    "url": "https://github.com/jenkinsci/wso2id-oauth-plugin/pull/10",
    "description": "Hello wso2id-oauth developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 10,
    "title": "feat(ci): Builds on the Jenkins Infrastructure",
    "state": "MERGED",
    "createdAt": "2025-01-22T20:25:47Z",
    "updatedAt": "2025-01-23T09:15:05Z",
    "user": "gounthar",
    "repository": "jenkinsci/appdynamics-plugin",
    "pluginName": "appdynamics-dashboard",
    "labels": null,
    "url": "https://github.com/jenkinsci/appdynamics-plugin/pull/10",
    "description": "Hello appdynamics-dashboard developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Setup the Jenkinsfile\n    io.jenkins.tools.pluginmodernizer.SetupJenkinsfile\n    Add a missing Jenkinsfile to the Jenkins plugin.\n\nWhy is this important?\nStarting with the Jenkins 2.463 weekly release, Jenkins now requires Java 17 or newer.\nThe first Long-Term Support (LTS) release requiring Java 17 or newer (version 2.479.x) was released at the end of October 2024.\nThe Jenkins core team strongly recommends that all users adopt either Java 17 or Java 21.\nThe adoption of Java 17 has almost surpassed that of Java 11, and the usage of Java 21 is rapidly increasing.\nThere will come a time when we no longer support plugins built with JDK 8 or 11.\nWhile this PR does not automatically make your plugin compatible with Java 17 or 21, it represents the first step towards a new era. Your plugin will be built and tested within the Jenkins infrastructure using Java 17 and 21.\nAfter this PR is merged, we will submit additional automated PRs to enable your plugin to build with Java 17 and 21.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 1,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-22T20:10:26Z",
    "updatedAt": "2025-01-26T12:16:39Z",
    "user": "gounthar",
    "repository": "jenkinsci/sonarqube-generic-coverage-plugin",
    "pluginName": "sonarqube-generic-coverage",
    "labels": null,
    "url": "https://github.com/jenkinsci/sonarqube-generic-coverage-plugin/pull/1",
    "description": "Hello sonarqube-generic-coverage developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 9,
    "title": "Require 2.440.3",
    "state": "MERGED",
    "createdAt": "2025-01-22T20:06:25Z",
    "updatedAt": "2025-01-27T18:24:57Z",
    "user": "gounthar",
    "repository": "jenkinsci/sonargraph-integration-plugin",
    "pluginName": "sonargraph-integration",
    "labels": null,
    "url": "https://github.com/jenkinsci/sonargraph-integration-plugin/pull/9",
    "description": "Hello sonargraph-integration developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 21,
    "title": "Require 2.462.3",
    "state": "OPEN",
    "createdAt": "2025-01-22T20:01:47Z",
    "updatedAt": "2025-01-26T16:38:50Z",
    "user": "gounthar",
    "repository": "jenkinsci/sonarqube-plugin",
    "pluginName": "sonar",
    "labels": null,
    "url": "https://github.com/jenkinsci/sonarqube-plugin/pull/21",
    "description": "Hello sonar developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 21,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-22T19:46:46Z",
    "updatedAt": "2025-01-26T12:40:23Z",
    "user": "gounthar",
    "repository": "jenkinsci/sitemonitor-plugin",
    "pluginName": "sitemonitor",
    "labels": null,
    "url": "https://github.com/jenkinsci/sitemonitor-plugin/pull/21",
    "description": "Hello sitemonitor developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 2,
    "title": "Require 2.346.3",
    "state": "CLOSED",
    "createdAt": "2025-01-22T19:40:17Z",
    "updatedAt": "2025-02-01T17:08:04Z",
    "user": "gounthar",
    "repository": "jenkinsci/signal-killer",
    "pluginName": "signal-killer",
    "labels": null,
    "url": "https://github.com/jenkinsci/signal-killer/pull/2",
    "description": "Hello signal-killer developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 1,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-22T19:32:11Z",
    "updatedAt": "2025-01-26T12:57:02Z",
    "user": "gounthar",
    "repository": "jenkinsci/sensedia-api-platform-plugin",
    "pluginName": "sensedia-api-platform",
    "labels": null,
    "url": "https://github.com/jenkinsci/sensedia-api-platform-plugin/pull/1",
    "description": "Hello sensedia-api-platform developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 2,
    "title": "Require 2.346.3",
    "state": "MERGED",
    "createdAt": "2025-01-22T19:28:44Z",
    "updatedAt": "2025-01-25T08:26:18Z",
    "user": "gounthar",
    "repository": "jenkinsci/send-stacktrace-to-eclipse-plugin",
    "pluginName": "send-stacktrace-to-eclipse-plugin",
    "labels": null,
    "url": "https://github.com/jenkinsci/send-stacktrace-to-eclipse-plugin/pull/2",
    "description": "Hello send-stacktrace-to-eclipse-plugin developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 4,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-22T19:11:01Z",
    "updatedAt": "2025-01-26T17:24:29Z",
    "user": "gounthar",
    "repository": "jenkinsci/safe-batch-environment-filter-plugin",
    "pluginName": "safe-batch-environment-filter",
    "labels": null,
    "url": "https://github.com/jenkinsci/safe-batch-environment-filter-plugin/pull/4",
    "description": "Hello safe-batch-environment-filter developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 5,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-22T19:07:20Z",
    "updatedAt": "2025-01-26T13:22:21Z",
    "user": "gounthar",
    "repository": "jenkinsci/runscope-plugin",
    "pluginName": "runscope",
    "labels": null,
    "url": "https://github.com/jenkinsci/runscope-plugin/pull/5",
    "description": "Hello runscope developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 4,
    "title": "Require 2.346.3",
    "state": "MERGED",
    "createdAt": "2025-01-22T19:01:13Z",
    "updatedAt": "2025-01-24T09:42:37Z",
    "user": "gounthar",
    "repository": "jenkinsci/report-info-plugin",
    "pluginName": "report-info",
    "labels": null,
    "url": "https://github.com/jenkinsci/report-info-plugin/pull/4",
    "description": "Hello report-info developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 32,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-22T18:38:11Z",
    "updatedAt": "2025-01-26T13:34:15Z",
    "user": "gounthar",
    "repository": "jenkinsci/redgate-sql-ci-plugin",
    "pluginName": "redgate-sql-ci",
    "labels": null,
    "url": "https://github.com/jenkinsci/redgate-sql-ci-plugin/pull/32",
    "description": "Hello redgate-sql-ci developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 11,
    "title": "Require 2.426.3",
    "state": "OPEN",
    "createdAt": "2025-01-22T18:23:07Z",
    "updatedAt": "2025-01-26T17:51:53Z",
    "user": "gounthar",
    "repository": "jenkinsci/qtest-plugin",
    "pluginName": "qtest",
    "labels": null,
    "url": "https://github.com/jenkinsci/qtest-plugin/pull/11",
    "description": "Hello qtest developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 8,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-22T18:21:00Z",
    "updatedAt": "2025-01-22T18:21:00Z",
    "user": "gounthar",
    "repository": "jenkinsci/qmetry-test-management-plugin",
    "pluginName": "qmetry-test-management",
    "labels": null,
    "url": "https://github.com/jenkinsci/qmetry-test-management-plugin/pull/8",
    "description": "Hello qmetry-test-management developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 25,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-22T18:18:15Z",
    "updatedAt": "2025-01-22T18:18:15Z",
    "user": "gounthar",
    "repository": "jenkinsci/qmetry-for-jira-test-management-plugin",
    "pluginName": "qmetry-for-jira-test-management",
    "labels": null,
    "url": "https://github.com/jenkinsci/qmetry-for-jira-test-management-plugin/pull/25",
    "description": "Hello qmetry-for-jira-test-management developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 2,
    "title": "Require 2.346.3",
    "state": "CLOSED",
    "createdAt": "2025-01-22T17:53:01Z",
    "updatedAt": "2025-01-25T22:06:41Z",
    "user": "gounthar",
    "repository": "jenkinsci/partyparrotstatus-plugin",
    "pluginName": "partyparrotstatus",
    "labels": null,
    "url": "https://github.com/jenkinsci/partyparrotstatus-plugin/pull/2",
    "description": "Hello partyparrotstatus developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 9,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-22T17:47:55Z",
    "updatedAt": "2025-01-22T17:47:55Z",
    "user": "gounthar",
    "repository": "jenkinsci/parallels-desktop-plugin",
    "pluginName": "parallels-desktop",
    "labels": null,
    "url": "https://github.com/jenkinsci/parallels-desktop-plugin/pull/9",
    "description": "Hello parallels-desktop developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 4,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-22T17:04:49Z",
    "updatedAt": "2025-01-22T17:04:49Z",
    "user": "gounthar",
    "repository": "jenkinsci/mttr-plugin",
    "pluginName": "mttr",
    "labels": null,
    "url": "https://github.com/jenkinsci/mttr-plugin/pull/4",
    "description": "Hello mttr developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 4,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-22T17:01:21Z",
    "updatedAt": "2025-01-22T17:01:21Z",
    "user": "gounthar",
    "repository": "jenkinsci/msginject-plugin",
    "pluginName": "msginject",
    "labels": null,
    "url": "https://github.com/jenkinsci/msginject-plugin/pull/4",
    "description": "Hello msginject developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 19,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-22T16:58:07Z",
    "updatedAt": "2025-01-22T16:58:07Z",
    "user": "gounthar",
    "repository": "jenkinsci/mqtt-notification-plugin",
    "pluginName": "mqtt-notification-plugin",
    "labels": null,
    "url": "https://github.com/jenkinsci/mqtt-notification-plugin/pull/19",
    "description": "Hello mqtt-notification-plugin developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 10,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-22T16:54:02Z",
    "updatedAt": "2025-01-22T16:54:02Z",
    "user": "gounthar",
    "repository": "jenkinsci/mission-control-view-plugin",
    "pluginName": "mission-control-view",
    "labels": null,
    "url": "https://github.com/jenkinsci/mission-control-view-plugin/pull/10",
    "description": "Hello mission-control-view developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 5,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-22T16:50:34Z",
    "updatedAt": "2025-01-22T16:50:34Z",
    "user": "gounthar",
    "repository": "jenkinsci/metrics-graphite-plugin",
    "pluginName": "metrics-graphite",
    "labels": null,
    "url": "https://github.com/jenkinsci/metrics-graphite-plugin/pull/5",
    "description": "Hello metrics-graphite developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 73,
    "title": "Require 2.361.4",
    "state": "OPEN",
    "createdAt": "2025-01-22T16:34:50Z",
    "updatedAt": "2025-01-22T16:34:50Z",
    "user": "gounthar",
    "repository": "jenkinsci/lucene-search-plugin",
    "pluginName": "lucene-search",
    "labels": null,
    "url": "https://github.com/jenkinsci/lucene-search-plugin/pull/73",
    "description": "Hello lucene-search developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  },
  {
    "number": 7,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-22T16:27:34Z",
    "updatedAt": "2025-01-22T16:27:34Z",
    "user": "gounthar",
    "repository": "jenkinsci/loadcomplete-plugin",
    "pluginName": "loadcomplete",
    "labels": null,
    "url": "https://github.com/jenkinsci/loadcomplete-plugin/pull/7",
    "description": "Hello loadcomplete developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 5,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-22T16:21:19Z",
    "updatedAt": "2025-01-22T16:21:19Z",
    "user": "gounthar",
    "repository": "jenkinsci/lifx-notifier-plugin",
    "pluginName": "lifx-notifier",
    "labels": null,
    "url": "https://github.com/jenkinsci/lifx-notifier-plugin/pull/5",
    "description": "Hello lifx-notifier developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 17,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-22T16:08:17Z",
    "updatedAt": "2025-01-22T16:08:17Z",
    "user": "gounthar",
    "repository": "jenkinsci/kiuwan-plugin",
    "pluginName": "kiuwanJenkinsPlugin",
    "labels": null,
    "url": "https://github.com/jenkinsci/kiuwan-plugin/pull/17",
    "description": "Hello kiuwanJenkinsPlugin developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 54,
    "title": "Require 2.346.3",
    "state": "OPEN",
    "createdAt": "2025-01-22T15:39:05Z",
    "updatedAt": "2025-01-22T15:39:05Z",
    "user": "gounthar",
    "repository": "jenkinsci/walldisplay-plugin",
    "pluginName": "jenkinswalldisplay",
    "labels": null,
    "url": "https://github.com/jenkinsci/walldisplay-plugin/pull/54",
    "description": "Hello jenkinswalldisplay developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "UNKNOWN"
  },
  {
    "number": 26,
    "title": "Require 2.375.1",
    "state": "OPEN",
    "createdAt": "2025-01-22T15:35:17Z",
    "updatedAt": "2025-01-22T15:35:17Z",
    "user": "gounthar",
    "repository": "jenkinsci/appspider-build-scanner-plugin",
    "pluginName": "jenkinsci-appspider-plugin",
    "labels": null,
    "url": "https://github.com/jenkinsci/appspider-build-scanner-plugin/pull/26",
    "description": "Hello jenkinsci-appspider-plugin developers! üëã\nThis is an automated pull request created by the Jenkins Plugin Modernizer tool. The tool has applied the following recipes to modernize the plugin:\n\n    Upgrade to latest LTS core version supporting Java 8\n    io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion\n    Upgrade to latest LTS core version supporting Java 8.",
    "checkStatus": "SUCCESS"
  }
]
